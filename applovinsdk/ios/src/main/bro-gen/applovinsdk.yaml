package: org.robovm.pods.applovinsdk
include: [foundation, uikit, coregraphics]
clang_args: ['-x', 'objective-c']
framework: AppLovinSDK
#exclude_deprecated: true
headers:
    - AppLovinSDK.h

private_typedefs: {}

typedefs: {}

enums:
    ALConsentDialogState: {}
    ALAdViewDisplayErrorCode: {}

classes:
    ALAd: {}
    ALAdService:
        methods:
            '-loadNextAd:andNotify:':
                name: loadNextAd
            '-loadNextAdForZoneIdentifier:andNotify:':
                name: loadNextAdForZoneIdentifier
            '-loadNextAdForAdToken:andNotify:':
                name: loadNextAdForAdToken
            '-loadNextAdForZoneIdentifiers:andNotify:':
                name: loadNextAdForZoneIdentifiers
            '-addAdUpdateObserver:ofSize:':
                name: addAdUpdateObserver
            '-removeAdUpdateObserver:ofSize:':
                name: removeAdUpdateObserver
    ALAdSize:
        methods:
            '+sizeWithLabel:orDefault:':
                constructor: true
                name: create
    ALAdType: {}
    ALAdView:
        methods:
            '-initWithSize:':
                name: init
            '-initWithSize:zoneIdentifier:':
                name: init
            '-initWithSdk:size:':
                name: init
            '-initWithSdk:size:zoneIdentifier:':
                name: init
            '-initWithFrame:size:sdk:':
                name: init
            '-render:overPlacement:':
                name: render
    ALEventService:
        methods:
            '-setSuperProperty:forKey:':
                name: setSuperProperty
            '-trackEvent:parameters:':
                name: trackEvent
                parameters:
                    1:
                        type: ALEventParameters
            '-trackInAppPurchaseWithTransactionIdentifier:parameters:':
                name: trackInAppPurchase
                parameters:
                    1:
                        type: ALEventParameters
            '-trackCheckoutWithTransactionIdentifier:parameters:':
                name: trackCheckout
                parameters:
                    1:
                        type: ALEventParameters
    ALIncentivizedInterstitialAd:
        methods:
            '-initWithSdk:':
                name: init
            '-initWithZoneIdentifier:':
                name: init
            '-initWithZoneIdentifier:sdk:':
                name: init
            '-showAd:andNotify:':
                name: showAd
            '-show':
                name: show
            '-showAndNotify:':
                name: show
            '-preloadAndNotify:':
                name: preload
            '+preloadAndNotify:':
                name: Preload
            '+isReadyForDisplay':
                name: IsReadyForDisplay
            '+show':
                name: Show
            '+showAndNotify:':
                name: Show
            '-showOver:placement:andNotify:':
                name: showOver
            '-initIncentivizedInterstitialWithSdk:':
                exclude: true
            '-showOver:andNotify:':
                name: showOver
            '-showOver:renderAd:andNotify:':
                name: showOver
            '+showOverPlacement:andNotify:':
                name: ShowOverPlacement
            '+showOver:placement:andNotify:':
                name: ShowOver
            '+showOver:andNotify:':
                name: ShowOver

    ALInterstitialAd:
        methods:
            '-initWithSdk:':
                name: init
            '+show':
                name: Show
            '-initInterstitialAdWithSdk:':
                exclude: true
            '-showOver:placement:andRender:':
                name: showOver
            '-initWithFrame:sdk:':
                name: init
            '-showOver:andRender:':
                name: showOver
            '+showOver:placement:':
                name: ShowOver
            '+showOver:':
                name: ShowOver
            '+showOverPlacement:':
                name: ShowOverPlacement
            '+isReadyForDisplay':
                name: IsReadyForDisplay
    ALNativeAd:
        methods:
            '-videoEndTrackingURL:firstPlay:':
                name: videoEndTrackingURL
    ALNativeAdService:
        methods:
            '-precacheResourcesForNativeAd:andNotify:':
                name: precacheResourcesForNativeAd
            '-loadNativeAdGroupOfCount:andNotify:':
                name: loadNativeAdGroupOfCount
            '-loadNativeAdGroupOfCount:forZoneIdentifier:andNotify:':
                name: loadNativeAdGroupOfCount
    ALPostbackService:
        methods:
            '-dispatchPostbackAsync:andNotify:':
                name: dispatchPostbackAsync
    ALPrivacySettings: {}
    ALSdk:
        methods:
            '-initializeSdkWithCompletionHandler:':
                name: initializeSdk
            '+initializeSdkWithCompletionHandler:':
                name: InitializeSdk
            '+initializeSdk':
                name: InitializeSdk
            '+sharedWithKey:':
                name: getShared
            '+sharedWithKey:settings:':
                name: getShared
    ALSdkConfiguration: {}
    ALSdkSettings: {}
    ALUserService:
        methods:
            '-showConsentDialogWithCompletionHandler:':
                name: showConsentDialog
    ALVariableService:
        methods:
            '-boolForKey:defaultValue:':
                name: getBool
            '-stringForKey:defaultValue:':
                name: getString
    MAAd: {}
    MAAdFormat: {}
    MAAdView:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-initWithAdUnitIdentifier:adFormat:':
                name: init
            '-initWithAdUnitIdentifier:adFormat:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
    MAInterstitialAd:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
    MAReward:
        methods:
            '+rewardWithAmount:label:':
                constructor: true
                name: create
    MARewardedAd:
        methods:
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '+sharedWithAdUnitIdentifier:':
                name: getShared
            '+sharedWithAdUnitIdentifier:sdk:':
                name: getShared
    ALCCommunicator:
        methods:
            '-subscribe:forTopic:':
                name: subscribe
            '-subscribe:forTopics:':
                name: subscribe
            '-unsubscribe:forTopic:':
                name: unsubscribe
            '-unsubscribe:forTopics:':
                name: unsubscribe
    ALCMessage:
        skip_def_constructor: true
        methods:
            '-initWithData:topic:fromPublisher:':
                name: init
    ALCMessagingService: {}

protocols:
    ALAdDisplayDelegate:
        methods:
            '-ad:wasDisplayedIn:':
                name: wasDisplayed
            '-ad:wasHiddenIn:':
                name: wasHidden
            '-ad:wasClickedIn:':
                name: wasClicked
    ALAdLoadDelegate:
        methods:
            '-adService:didLoadAd:':
                name: didLoadAd
            '-adService:didFailToLoadAdWithError:':
                name: didFailToLoadAd
    ALAdRewardDelegate:
        methods:
            '-rewardValidationRequestForAd:didSucceedWithResponse:':
                name: didSucceed
            '-rewardValidationRequestForAd:didExceedQuotaWithResponse:':
                name: didExceedQuota
            '-rewardValidationRequestForAd:wasRejectedWithResponse:':
                name: wasRejected
            '-rewardValidationRequestForAd:didFailWithError:':
                name: didFail
    ALAdVideoPlaybackDelegate:
        methods:
            '-videoPlaybackEndedInAd:atPlaybackPercent:fullyWatched:':
                name: videoPlaybackEnded
    ALAdViewEventDelegate:
        methods:
            '-ad:didPresentFullscreenForAdView:':
                name: didPresentFullscreen
            '-ad:willDismissFullscreenForAdView:':
                name: willDismissFullscreen
            '-ad:didDismissFullscreenForAdView:':
                name: didDismissFullscreen
            '-ad:willLeaveApplicationForAdView:':
                name: willLeaveApplication
            '-ad:didReturnToApplicationForAdView:':
                name: didReturnToApplication
            '-ad:didFailToDisplayInAdView:withError:':
                name: didFailToDisplay
    ALNativeAdLoadDelegate:
        methods:
            '-nativeAdService:didLoadAds:':
                name: didLoadAds
            '-nativeAdService:didFailToLoadAdsWithError:':
                name: didFailToLoadAds
    ALNativeAdPrecacheDelegate:
        methods:
            '-nativeAdService:didPrecacheImagesForAd:':
                name: didPrecacheImages
            '-nativeAdService:didPrecacheVideoForAd:':
                name: didPrecacheVideo
            '-nativeAdService:didFailToPrecacheImagesForAd:withError:':
                name: didFailToPrecacheImages
            '-nativeAdService:didFailToPrecacheVideoForAd:withError:':
                name: didFailToPrecacheVideo
    ALPostbackDelegate:
        methods:
            '-postbackService:didExecutePostback:':
                name: didExecutePostback
            '-postbackService:didFailToExecutePostback:errorCode:':
                name: didFailToExecutePostback
    ALVariableServiceDelegate:
        methods:
            '-variableService:didUpdateVariables:':
                name: didUpdateVariables
    ALAdUpdateObserver:
        methods:
            '-adService:didUpdateAd:':
                name: didUpdateAd
    MAAdDelegate:
        methods:
            '-didFailToLoadAdForAdUnitIdentifier:withErrorCode:':
                name: didFailToLoadAd
            '-didFailToDisplayAd:withErrorCode:':
                name: didFailToDisplayAd
    MAAdViewAdDelegate: {}
    MARewardedAdDelegate:
        methods:
            '-didRewardUserForAd:withReward:':
                name: didRewardUser
    ALCEntity: {}
    ALCPublisher: {}
    ALCSubscriber: {}
functions:

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    kALEventType(.*):
        class: ALEventTypes
        name: '#{g[0]}'
        type: NSString

    ALDeepLinkCommand(.*):
        class: ALDeepLinkCommands
        name: '#{g[0]}'
        type: NSString

    ALMediationProvider(.*):
        class: ALMediationProviders
        name: '#{g[0]}'
        type: NSString

    kALEventParameter(.*)Key:
        dictionary: ALEventParameters
        name: '#{g[0]}'
        type: NSString
        methods:
            UserAccountIdentifier:
                type: NSString
            ContentIdentifier:
                type: NSString
            SearchQuery:
                type: NSString
            CompletedLevel:
                type: NSString
            CompletedAchievement:
                type: NSString
            VirtualCurrencyAmount:
                type: NSNumber
            VirtualCurrencyName:
                type: NSString
            ProductIdentifier:
                type: NSString
            RevenueAmount:
                type: NSNumber
            RevenueCurrency:
                type: NSString
            CheckoutTransactionIdentifier:
                type: NSString
            StoreKitTransactionIdentifier:
                type: NSString
            StoreKitReceipt:
                type: NSData
            ReservationStartDate:
                type: NSDate
            ReservationEndDate:
                type: NSDate

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    kALErrorCode(.*):
        class: ALErrorCodes
        name: '#{g[0]}'

    kMAErrorCode(.*):
        class: MAErrorCodes
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
