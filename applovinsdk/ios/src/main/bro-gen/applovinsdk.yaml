package: org.robovm.pods.applovinsdk
include: [foundation, uikit, coregraphics, coreanimation]
clang_args: ['-x', 'objective-c']
framework: AppLovinSDK
#exclude_deprecated: true
headers:
    - AppLovinSDK.h

typedefs: {}

enums:
    ALConsentDialogState: {}
    ALAdViewDisplayErrorCode: {}
    ALAppTrackingTransparencyStatus: {}
    MAAdLoadState: {}
    MAErrorCode: {}
    ALAdContentRating: { }
    ALGender: { }
    MAAdapterInitializationStatus: { }
classes:
    ALAd:
        methods:
            '-adValueForKey:defaultValue:':
                name: getAdValue
    ALAdService:
        methods:
            '-loadNextAd:andNotify:':
                name: loadNextAd
            '-loadNextAdForZoneIdentifier:andNotify:':
                name: loadNextAdForZoneIdentifier
            '-loadNextAdForAdToken:andNotify:':
                name: loadNextAdForAdToken
            '-loadNextAdForZoneIdentifiers:andNotify:':
                name: loadNextAdForZoneIdentifiers
            '-addAdUpdateObserver:ofSize:':
                name: addAdUpdateObserver
            '-removeAdUpdateObserver:ofSize:':
                name: removeAdUpdateObserver
            '-adValueForKey:defaultValue:':
                name: getAdValue
    ALAdSize:
        methods:
            '+sizeWithLabel:orDefault:':
                constructor: true
                name: create
    ALAdType: {}
    ALAdView:
        methods:
            '-initWithSize:':
                name: init
            '-initWithSize:zoneIdentifier:':
                name: init
            '-initWithSdk:size:':
                name: init
            '-initWithSdk:size:zoneIdentifier:':
                name: init
            '-initWithFrame:size:sdk:':
                name: init
            '-render:overPlacement:':
                name: render
    ALEventService:
        methods:
            '-setSuperProperty:forKey:':
                name: setSuperProperty
            '-trackEvent:parameters:':
                name: trackEvent
                parameters:
                    1:
                        type: ALEventParameters
            '-trackInAppPurchaseWithTransactionIdentifier:parameters:':
                name: trackInAppPurchase
                parameters:
                    1:
                        type: ALEventParameters
            '-trackCheckoutWithTransactionIdentifier:parameters:':
                name: trackCheckout
                parameters:
                    1:
                        type: ALEventParameters
    ALIncentivizedInterstitialAd:
        methods:
            '-initWithSdk:':
                name: init
            '-initWithZoneIdentifier:':
                name: init
            '-initWithZoneIdentifier:sdk:':
                name: init
            '-showAd:andNotify:':
                name: showAd
            '-show':
                name: show
            '-showAndNotify:':
                name: show
            '-preloadAndNotify:':
                name: preload
            '+preloadAndNotify:':
                name: Preload
            '+isReadyForDisplay':
                name: IsReadyForDisplay
            '+show':
                name: Show
            '+showAndNotify:':
                name: Show
            '-showOver:placement:andNotify:':
                name: showOver
            '-initIncentivizedInterstitialWithSdk:':
                exclude: true
            '-showOver:andNotify:':
                name: showOver
            '-showOver:renderAd:andNotify:':
                name: showOver
            '+showOverPlacement:andNotify:':
                name: ShowOverPlacement
            '+showOver:placement:andNotify:':
                name: ShowOver
            '+showOver:andNotify:':
                name: ShowOver

    ALInterstitialAd:
        methods:
            '-initWithSdk:':
                name: init
            '+show':
                name: Show
            '-initInterstitialAdWithSdk:':
                exclude: true
            '-showOver:placement:andRender:':
                name: showOver
            '-initWithFrame:sdk:':
                name: init
            '-showOver:andRender:':
                name: showOver
            '+showOver:placement:':
                name: ShowOver
            '+showOver:':
                name: ShowOver
            '+showOverPlacement:':
                name: ShowOverPlacement
            '+isReadyForDisplay':
                name: IsReadyForDisplay
    ALNativeAd:
        methods:
            '-videoEndTrackingURL:firstPlay:':
                name: videoEndTrackingURL
    ALNativeAdService:
        methods:
            '-precacheResourcesForNativeAd:andNotify:':
                name: precacheResourcesForNativeAd
            '-loadNativeAdGroupOfCount:andNotify:':
                name: loadNativeAdGroupOfCount
            '-loadNativeAdGroupOfCount:forZoneIdentifier:andNotify:':
                name: loadNativeAdGroupOfCount
    ALPostbackService: # there is no class, just forward declaration
        extends: NSObject
    ALPrivacySettings: {}
    ALSdk:
        methods:
            '-initializeSdkWithCompletionHandler:':
                name: initializeSdk
            '+initializeSdkWithCompletionHandler:':
                name: InitializeSdk
            '+initializeSdk':
                name: InitializeSdk
            '+sharedWithKey:':
                name: getShared
            '+sharedWithKey:settings:':
                name: getShared
            '+sharedWithSettings:':
                name: getShared
    ALSdkConfiguration: {}
    ALSdkSettings:
        methods:
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
    ALUserService:
        methods:
            '-showConsentDialogWithCompletionHandler:':
                name: showConsentDialog
    ALVariableService:
        methods:
            '-boolForKey:defaultValue:':
                name: getBool
            '-stringForKey:defaultValue:':
                name: getString
    MAAd:
        methods:
            '-adValueForKey:defaultValue:':
                name: getAdValue
    MAAdFormat: {}
    MAAdView:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-initWithAdUnitIdentifier:adFormat:':
                name: init
            '-initWithAdUnitIdentifier:adFormat:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '-setLocalExtraParameterForKey:value:':
                name: setLocalExtraParameter
    MAInterstitialAd:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '-setLocalExtraParameterForKey:value:':
                name: setLocalExtraParameter
            '-showAdForPlacement:customData:':
                name: showAdForPlacement
            '-showAdForPlacement:customData:viewController:':
                name: showAdForPlacement
    MAReward:
        methods:
            '+rewardWithAmount:label:':
                constructor: true
                name: create
    MARewardedAd:
        methods:
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '+sharedWithAdUnitIdentifier:':
                name: getShared
            '+sharedWithAdUnitIdentifier:sdk:':
                name: getShared
            '-setLocalExtraParameterForKey:value:':
                name: setLocalExtraParameter
            '-showAdForPlacement:customData:':
                name: showAdForPlacement
            '-showAdForPlacement:customData:viewController:':
                name: showAdForPlacement
    ALCCommunicator:
        methods:
            '-subscribe:forTopic:':
                name: subscribe
            '-subscribe:forTopics:':
                name: subscribe
            '-unsubscribe:forTopic:':
                name: unsubscribe
            '-unsubscribe:forTopics:':
                name: unsubscribe
    ALCMessage:
        skip_def_constructor: true
        methods:
            '-initWithData:topic:fromPublisher:':
                name: init
    ALCMessagingService: {}
    MARewardedInterstitialAd:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '-setLocalExtraParameterForKey:value:':
                name: setLocalExtraParameter
            '-showAdForPlacement:customData:':
                name: showAdForPlacement
            '-showAdForPlacement:customData:viewController:':
                name: showAdForPlacement
    ALUserSegment: {}
    ALConsentFlowSettings: { }
    MAMediatedNetworkInfo: { }
    MAError: { }
    MAAdWaterfallInfo: {}
    MANativeAdLoader:
        methods:
            '-initWithAdUnitIdentifier:':
                name: init
            '-initWithAdUnitIdentifier:sdk:':
                name: init
            '-setExtraParameterForKey:value:':
                name: setExtraParameter
            '-setLocalExtraParameterForKey:value:':
                name: setLocalExtraParameter
            '-renderNativeAdView:withAd:':
                name: renderNativeAdView
    MANetworkResponseInfo: {}
    ALAtomicBoolean:
        methods:
            '-compareAndSet:update:':
                name: compareAndSet
            '-initWithValue:':
                name: init
    ALMediationAdapter:
        properties:
            'mediationTag':
                exclude: true # Left here for backwards-compatibility purposes - to be removed when enough time passes
        methods:
            '-initWithSdk:':
                name: init
            '-e:becauseOf:':
                name: e
            '-userError:becauseOf:':
                name: userError
    ALMediationAdapterRouter:
        methods:
            '-addInterstitialAdapter:delegate:forPlacementIdentifier:':
                name: addInterstitialAdapter
            '-addRewardedAdapter:delegate:forPlacementIdentifier:':
                name: addRewardedAdapter
            '-addAdViewAdapter:delegate:forPlacementIdentifier:adView:':
                name: addAdViewAdapter
            '-updateAdView:forPlacementIdentifier:':
                name: updateAdView
            '-removeAdapter:forPlacementIdentifier:':
                name: removeAdapter
            '-didLoadAdForPlacementIdentifier:withExtraInfo:':
                name: didLoadAdForPlacementIdentifier
            '-didFailToLoadAdForPlacementIdentifier:error:':
                name: didFailToLoadAdForPlacementIdentifier
            '-didDisplayAdForPlacementIdentifier:withExtraInfo:':
                name: didDisplayAdForPlacementIdentifier
            '-didFailToDisplayAdForPlacementIdentifier:error:':
                name: didFailToDisplayAdForPlacementIdentifier
            '-didRewardUserForPlacementIdentifier:withReward:':
                name: didRewardUserForPlacementIdentifier
            '-log:becauseOf:':
                name: log
    ALTargetingData: {}
    ALUtils: {}
    MAAdapterError:
        methods:
            '+errorWithCode:':
                name: create
                constructor: true
            '+errorWithCode:adapterErrorCode:':
                name: create
                constructor: true
            '+errorWithCode:errorString:':
                name: create
                constructor: true
            '+errorWithNSError:':
                name: create
                constructor: true
            '+errorWithAdapterError:thirdPartySdkErrorCode:thirdPartySdkErrorMessage:':
                name: create
                constructor: true
            '+errorWithCode:errorString:thirdPartySdkErrorCode:thirdPartySdkErrorMessage:':
                name: create
                constructor: true
    MANativeAd:
        methods:
            '-initWithFormat:builderBlock:':
                name: init
    MANativeAdBuilder: {}
    MANativeAdImage:
        methods:
            '-initWithImage:':
                name: init
            '-initWithURL:':
                name: init
    MANativeAdView:
        methods:
            '-bindViewsWithAdViewBinder:':
                name: bindViews
            '+nativeAdViewFromAd:':
                name: create
                constructor: true
            '+nativeAdViewFromAd:withTemplate:':
                name: create
                constructor: true
    MANativeAdViewBinder:
        methods:
            '-initWithBuilderBlock:':
                name: init
    MANativeAdViewBinderBuilder: {}
    MAAdPlacer:
        methods:
            '-renderAdAtIndexPath:inView:':
                name: renderAd
            '-adjustedNumberOfItems:inSection:':
                name: adjustedNumberOfItems
            '-moveItemAtIndexPath:toIndexPath:':
                name: moveItem
            '-moveSection:toSection:':
                name: moveSection
            '-initWithSettings:':
                name: init
    MAAdPlacerSettings:
        methods:
            '+settingsWithAdUnitIdentifier:':
                constructor: true
                name: create
    MACollectionViewAdPlacer:
        methods:
            '+placerWithCollectionView:settings:':
                constructor: true
                name: create
    MACollectionViewAdPlacerCell: {}
    MACustomAdPlacer: {}
    MATableViewAdPlacer:
        methods:
            '+placerWithTableView:settings:':
                constructor: true
                name: create
    MATableViewAdPlacerCell: {}

protocols:
    ALAdDisplayDelegate:
        methods:
            '-ad:wasDisplayedIn:':
                name: wasDisplayed
            '-ad:wasHiddenIn:':
                name: wasHidden
            '-ad:wasClickedIn:':
                name: wasClicked
    ALAdLoadDelegate:
        methods:
            '-adService:didLoadAd:':
                name: didLoadAd
            '-adService:didFailToLoadAdWithError:':
                name: didFailToLoadAd
    ALAdRewardDelegate:
        methods:
            '-rewardValidationRequestForAd:didSucceedWithResponse:':
                name: didSucceed
            '-rewardValidationRequestForAd:didExceedQuotaWithResponse:':
                name: didExceedQuota
            '-rewardValidationRequestForAd:wasRejectedWithResponse:':
                name: wasRejected
            '-rewardValidationRequestForAd:didFailWithError:':
                name: didFail
    ALAdVideoPlaybackDelegate:
        methods:
            '-videoPlaybackEndedInAd:atPlaybackPercent:fullyWatched:':
                name: videoPlaybackEnded
    ALAdViewEventDelegate:
        methods:
            '-ad:didPresentFullscreenForAdView:':
                name: didPresentFullscreen
            '-ad:willDismissFullscreenForAdView:':
                name: willDismissFullscreen
            '-ad:didDismissFullscreenForAdView:':
                name: didDismissFullscreen
            '-ad:willLeaveApplicationForAdView:':
                name: willLeaveApplication
            '-ad:didReturnToApplicationForAdView:':
                name: didReturnToApplication
            '-ad:didFailToDisplayInAdView:withError:':
                name: didFailToDisplay
    ALNativeAdLoadDelegate:
        methods:
            '-nativeAdService:didLoadAds:':
                name: didLoadAds
            '-nativeAdService:didFailToLoadAdsWithError:':
                name: didFailToLoadAds
    ALNativeAdPrecacheDelegate:
        methods:
            '-nativeAdService:didPrecacheImagesForAd:':
                name: didPrecacheImages
            '-nativeAdService:didPrecacheVideoForAd:':
                name: didPrecacheVideo
            '-nativeAdService:didFailToPrecacheImagesForAd:withError:':
                name: didFailToPrecacheImages
            '-nativeAdService:didFailToPrecacheVideoForAd:withError:':
                name: didFailToPrecacheVideo
    ALPostbackDelegate:
        methods:
            '-postbackService:didExecutePostback:':
                name: didExecutePostback
            '-postbackService:didFailToExecutePostback:errorCode:':
                name: didFailToExecutePostback
    ALVariableServiceDelegate:
        methods:
            '-variableService:didUpdateVariables:':
                name: didUpdateVariables
    MAAdDelegate:
        methods:
            '-didFailToLoadAdForAdUnitIdentifier:withErrorCode:':
                name: didFailToLoadAd
            '-didFailToDisplayAd:withErrorCode:':
                name: didFailToDisplayAd
            '-didFailToLoadAdForAdUnitIdentifier:withError:':
                name: didFailToLoad
            '-didFailToDisplayAd:withError:':
                name: didFailToDisplayAd
    MAAdViewAdDelegate: {}
    MARewardedAdDelegate:
        methods:
            '-didRewardUserForAd:withReward:':
                name: didRewardUser
    ALCEntity: {}
    ALCPublisher: {}
    ALCSubscriber: {}
    MAAdRevenueDelegate: {}
    MANativeAdDelegate:
        methods:
            '-didLoadNativeAd:forAd:':
                name: didLoadNativeAd
            '-didFailToLoadNativeAdForAdUnitIdentifier:withError:':
                name: didFailToLoadNativeAd
    MAAdViewAdapter:
        methods:
            '-loadAdViewAdForParameters:adFormat:andNotify:':
                name: loadAdViewAd
    MAAdViewAdapterDelegate:
        methods:
            '-didLoadAdForAdView:withExtraInfo:':
                name: didLoadAd
            '-didFailToLoadAdViewAdWithError:':
                name: didFailToLoadAd
            '-didDisplayAdViewAdWithExtraInfo:':
                name: didDisplayAdViewAd
            '-didFailToDisplayAdViewAdWithError:':
                name: didFailToDisplayAdViewAd
            '-didClickAdViewAdWithExtraInfo:':
                name: didClickAdViewAd
            '-didHideAdViewAdWithExtraInfo:':
                name: didHideAdViewAd
    MAAdapter:
        methods:
            '-initializeWithParameters:withCompletionHandler:':
                name: initialize
            '-initializeWithParameters:completionHandler:':
                name: initialize
    MAAdapterDelegate: { }
    MAAdapterInitializationParameters: { }
    MAAdapterParameters: { }
    MAAdapterResponseParameters: { }
    MAInterstitialAdapter:
        methods:
            '-loadInterstitialAdForParameters:andNotify:':
                name: loadInterstitialAd
            '-showInterstitialAdForParameters:andNotify:':
                name: showInterstitialAd
    MAInterstitialAdapterDelegate:
        methods:
            '-didLoadInterstitialAdWithExtraInfo:':
                name: didLoadInterstitialAd
            '-didFailToLoadInterstitialAdWithError:':
                name: didFailToLoadInterstitialAd
            '-didDisplayInterstitialAdWithExtraInfo:':
                name: didDisplayInterstitialAd
            '-didFailToDisplayInterstitialAdWithError:':
                name: didFailToDisplayInterstitialAd
            '-didClickInterstitialAdWithExtraInfo:':
                name: didClickInterstitialAd
            '-didHideInterstitialAdWithExtraInfo:':
                name: didHideInterstitialAd
    MANativeAdAdapter:
        methods:
            '-loadNativeAdForParameters:andNotify:':
                name: loadNativeAd
    MANativeAdAdapterDelegate:
        methods:
            '-didLoadAdForNativeAd:withExtraInfo:':
                name: didLoadAdForNativeAd
            '-didFailToLoadNativeAdWithError:':
                name: didFailToLoadNativeAd
            '-didDisplayNativeAdWithExtraInfo:':
                name: didDisplayNativeAd
    MARewardedAdapter:
        methods:
            '-loadRewardedAdForParameters:andNotify:':
                name: loadRewardedAd
            '-showRewardedAdForParameters:andNotify:':
                name: showRewardedAd
    MARewardedAdapterDelegate:
        methods:
            '-didLoadRewardedAdWithExtraInfo:':
                name: didLoadRewardedAd
            '-didFailToLoadRewardedAdWithError:':
                name: didFailToLoadRewardedAd
            '-didDisplayRewardedAdWithExtraInfo:':
                name: didDisplayRewardedAd
            '-didFailToDisplayRewardedAdWithError:':
                name: didFailToDisplayRewardedAd
            '-didRewardUserWithReward:':
                name: didRewardUser
            '-didClickRewardedAdWithExtraInfo:':
                name: didClickRewardedAd
            '-didHideRewardedAdWithExtraInfo:':
                name: didHideRewardedAd
    MARewardedInterstitialAdapter:
        methods:
            '-loadRewardedInterstitialAdForParameters:andNotify:':
                name: loadRewardedInterstitialAd
            '-showRewardedInterstitialAdForParameters:andNotify:':
                name: showRewardedInterstitialAd
    MARewardedInterstitialAdapterDelegate:
        methods:
            '-didLoadRewardedInterstitialAdWithExtraInfo:':
                name: didLoadRewardedInterstitialAd
            '-didFailToLoadRewardedInterstitialAdWithError:':
                name: didFailToLoadRewardedInterstitialAd
            '-didDisplayRewardedInterstitialAdWithExtraInfo:':
                name: didDisplayRewardedInterstitialAd
            '-didFailToDisplayRewardedInterstitialAdWithError:':
                name: didFailToDisplayRewardedInterstitialAd
            '-didRewardUserWithReward:':
                name: didRewardUser
            '-didClickRewardedInterstitialAdWithExtraInfo:':
                name: didClickRewardedInterstitialAd
            '-didHideRewardedInterstitialAdWithExtraInfo:':
                name: didHideRewardedInterstitialAd
    MASignalCollectionDelegate:
        methods:
            '-didFailToCollectSignalWithErrorMessage:':
                name: didFailToCollectSignal
    MASignalCollectionParameters: { }
    MASignalProvider:
        methods:
            '-collectSignalWithParameters:andNotify:':
                name: collectSignal
    MAAdPlacerDelegate: {}
functions:

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    kMAConfigKeyMuted:
        exclude: true # Adapters no longer support mute APIs

    kALEventType(.*):
        class: ALEventTypes
        name: '#{g[0]}'
        type: NSString

    ALDeepLinkCommand(.*):
        class: ALDeepLinkCommands
        name: '#{g[0]}'
        type: NSString

    ALMediationProvider(.*):
        class: ALMediationProviders
        name: '#{g[0]}'
        type: NSString

    kALEventParameter(.*)Key:
        dictionary: ALEventParameters
        name: '#{g[0]}'
        type: NSString
        methods:
            UserAccountIdentifier:
                type: NSString
            ContentIdentifier:
                type: NSString
            SearchQuery:
                type: NSString
            CompletedLevel:
                type: NSString
            CompletedAchievement:
                type: NSString
            VirtualCurrencyAmount:
                type: NSNumber
            VirtualCurrencyName:
                type: NSString
            ProductIdentifier:
                type: NSString
            RevenueAmount:
                type: NSNumber
            RevenueCurrency:
                type: NSString
            CheckoutTransactionIdentifier:
                type: NSString
            StoreKitTransactionIdentifier:
                type: NSString
            StoreKitReceipt:
                type: NSData
            ReservationStartDate:
                type: NSDate
            ReservationEndDate:
                type: NSDate

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    kALErrorCode(.*):
        class: ALErrorCodes
        name: '#{g[0]}'

    kMAErrorCode(.*):
        class: MAErrorCodes
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
