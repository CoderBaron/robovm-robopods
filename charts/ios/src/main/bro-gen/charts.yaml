package: org.robovm.pods.charts
include: [foundation, uikit, coregraphics, coreanimation]
framework: Charts
clang_args: ['-x', 'objective-c']
headers:
    - Charts.h

private_typedefs:
    NSKeyValueChangeKey: NSString

typedefs: {}

enums:
    ChartDataSetRounding: {}
    ChartEasingOption: {}
    ChartLimitLabelPosition: {}
    CombinedChartDrawOrder: {}
    ChartFillType: {}
    ChartLegendPosition: {}
    ChartLegendForm: {}
    ChartLegendHorizontalAlignment: {}
    ChartLegendVerticalAlignment: {}
    ChartLegendOrientation: {}
    ChartLegendDirection: {}
    LineChartMode: {}
    PieChartValuePosition: {}
    ScatterShape: {}
    XAxisLabelPosition: {}
    YAxisLabelPosition: {}
    AxisDependency: {}

classes:
    AnimatedMoveViewJob:
        methods:
            '-initWithViewPortHandler:xValue:yValue:transformer:view:xOrigin:yOrigin:duration:easing:':
                name: init
    AnimatedViewPortJob:
        methods:
            '-initWithViewPortHandler:xValue:yValue:transformer:view:xOrigin:yOrigin:duration:easing:':
                name: init
            '-stopWithFinish:':
                name: stop
    AnimatedZoomViewJob:
        methods:
            '-initWithViewPortHandler:transformer:view:yAxis:xAxisRange:scaleX:scaleY:xOrigin:yOrigin:zoomCenterX:zoomCenterY:zoomOriginX:zoomOriginY:duration:easing:':
                name: init
    BarChartData:
        methods:
            '-groupBarsFromX:groupSpace:barSpace:':
                name: groupBars
            '-groupWidthWithGroupSpace:barSpace:':
                name: groupWidth
    BarChartDataEntry:
        methods:
            '-initWithX:yValues:':
                name: init
            '-initWithX:yValues:data:':
                name: init
            '-initWithX:yValues:icon:data:':
                name: init
            '-initWithX:yValues:icon:':
                name: init
    BarChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
    BarChartHighlighter:
        methods:
            '-getHighlightWithX:y:':
                name: getHighlight
            '-getDistanceWithX1:y1:x2:y2:':
                name: getDistance
            '-getStackedHighlightWithHigh:set:xValue:yValue:':
                name: getStackedHighlight
            '-getClosestStackIndexWithRanges:value:':
                name: getClosestStackIndex
    BarChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:index:':
                name: drawDataSet
            '-drawValueWithContext:value:xPos:yPos:font:align:color:':
                name: drawValue
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-setHighlightDrawPosWithHighlight:barRect:':
                name: setHighlightDrawPos
    BarChartView:
        properties:
            'drawValueAboveBarEnabled':
                getter: drawValueAboveBarEnabled
            'drawBarShadowEnabled':
                getter: drawBarShadowEnabled
            'highlightFullBarEnabled':
                getter: highlightFullBarEnabled
        methods:
            '-groupBarsFromX:groupSpace:barSpace:':
                name: groupBars
            '-highlightValueWithX:dataSetIndex:stackIndex:':
                name: highlightValue
            '-getBarBoundsWithEntry:':
                name: getBarBounds
    BarLineChartViewBase:
        properties:
            'dragEnabled': # fix for duplicate
                getter: dragEnabled
            'scaleXEnabled': # fix for duplicate
                getter: scaleXEnabled
            'scaleYEnabled': # fix for duplicate
                getter: scaleYEnabled
            'doubleTapToZoomEnabled': # fix for duplicate
                getter: doubleTapToZoomEnabled
            'highlightPerDragEnabled': # fix for duplicate
                getter: highlightPerDragEnabled
            'drawGridBackgroundEnabled': # fix for duplicate
                getter: drawGridBackgroundEnabled
            'drawBordersEnabled': # fix for duplicate
                getter: drawBordersEnabled
            'pinchZoomEnabled': # fix for duplicate
                getter: pinchZoomEnabled
            'autoScaleMinMaxEnabled': # fix for duplicate
                getter: autoScaleMinMaxEnabled
        methods:
            '-observeValueForKeyPath:ofObject:change:context:':
                name: observeValue
            '-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:':
                name: shouldRecognizeSimultaneously
            '-gestureRecognizerShouldBegin:':
                name: shouldBegin
            '-zoomWithScaleX:scaleY:x:y:':
                name: zoom
            '-zoomWithScaleX:scaleY:xValue:yValue:axis:':
                name: zoom
            '-zoomToCenterWithScaleX:scaleY:':
                name: zoomToCenter
            '-zoomAndCenterViewAnimatedWithScaleX:scaleY:xValue:yValue:axis:duration:easing:':
                name: zoomAndCenterView
            '-zoomAndCenterViewAnimatedWithScaleX:scaleY:xValue:yValue:axis:duration:easingOption:':
                name: zoomAndCenterView
            '-zoomAndCenterViewAnimatedWithScaleX:scaleY:xValue:yValue:axis:duration:':
                name: zoomAndCenterView
            '-setScaleMinima:scaleY:':
                name: setScale
            '-setVisibleXRangeWithMinXRange:maxXRange:':
                name: setVisibleXRange
            '-setVisibleYRangeMaximum:axis:':
                name: setVisibleYRangeMaximum
            '-setVisibleYRangeMinimum:axis:':
                name: setVisibleYRangeMinimum
            '-setVisibleYRangeWithMinYRange:maxYRange:axis:':
                name: setVisibleYRange
            '-moveViewToY:axis:':
                name: moveView
            '-moveViewToXValue:yValue:axis:':
                name: moveView
            '-moveViewToAnimatedWithXValue:yValue:axis:duration:easing:':
                name: moveView
            '-moveViewToAnimatedWithXValue:yValue:axis:duration:easingOption:':
                name: moveView
            '-moveViewToAnimatedWithXValue:yValue:axis:duration:':
                name: moveView
            '-centerViewToXValue:yValue:axis:':
                name: centerView
            '-centerViewToAnimatedWithXValue:yValue:axis:duration:easing:':
                name: centerView
            '-centerViewToAnimatedWithXValue:yValue:axis:duration:easingOption:':
                name: centerView
            '-centerViewToAnimatedWithXValue:yValue:axis:duration:':
                name: centerView
            '-setViewPortOffsetsWithLeft:top:right:bottom:':
                name: setViewPortOffsets
            '-getPositionWithEntry:axis:':
                name: getPosition
            '-valueForTouchPointWithPoint:axis:':
                name: getValueForTouchPoint
            '-pixelForValuesWithX:y:axis:':
                name: getPixelForValues
            '-setYAxisMinWidth:width:':
                name: setYAxisMinWidth
            '-setYAxisMaxWidth:width:':
                name: setYAxisMaxWidth
            '-getAxisRangeWithAxis:':
                name: getAxisRange
            '-getEntryByTouchPointWithPoint:':
                name: getEntryByTouchPoint
            '-getDataSetByTouchPointWithPoint:':
                name: getDataSetByTouchPoint
            '-isInvertedWithAxis:':
                name: isInverted
    BarLineScatterCandleBubbleChartData: {}
    BarLineScatterCandleBubbleChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
    BarLineScatterCandleBubbleChartRenderer:
        methods:
            '-initWithAnimator:viewPortHandler:':
                name: init
            '-isInBoundsXWithEntry:dataSet:':
                name: isInBoundsX
    BubbleChartData: {}
    BubbleChartDataEntry:
        methods:
            '-initWithX:y:size:':
                name: init
            '-initWithX:y:size:data:':
                name: init
            '-initWithX:y:size:icon:':
                name: init
            '-initWithX:y:size:icon:data:':
                name: init
    BubbleChartDataSet:
        properties:
            'normalizeSizeEnabled':
                getter: normalizeSizeEnabled
        methods:
            '-initWithValues:label:':
                name: init
    BubbleChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:':
                name: drawDataSet
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-drawDataSetWithContext:dataSet:dataSetIndex:':
                name: drawDataSet
    BubbleChartView: {}
    CandleChartData: {}
    CandleChartDataEntry:
        methods:
            '-initWithX:shadowH:shadowL:open:close:':
                name: init
            '-initWithX:shadowH:shadowL:open:close:data:':
                name: init
            '-initWithX:shadowH:shadowL:open:close:icon:':
                name: init
            '-initWithX:shadowH:shadowL:open:close:icon:data:':
                name: init
    CandleChartDataSet:
        properties:
            'shadowColorSameAsCandle':
                getter: shadowColorSameAsCandle
            'increasingFilled':
                getter: increasingFilled
            'decreasingFilled':
                getter: decreasingFilled
        methods:
            '-initWithValues:label:':
                name: init
    CandleStickChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:':
                name: drawDataSet
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
    CandleStickChartView: {}
    ChartAnimator:
        methods:
            '-animateWithXAxisDuration:yAxisDuration:easingX:easingY:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easingOptionX:easingOptionY:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easing:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easingOption:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:':
                name: animate
            '-animateWithXAxisDuration:easing:':
                name: animateX
            '-animateWithXAxisDuration:easingOption:':
                name: animateX
            '-animateWithYAxisDuration:easing:':
                name: animateY
            '-animateWithYAxisDuration:easingOption:':
                name: animateY
    ChartAxisBase:
        properties:
            'drawGridLinesEnabled':
                getter: drawGridLinesEnabled
            'granularityEnabled':
                getter: granularityEnabled
            'drawAxisLineEnabled':
                getter: drawAxisLineEnabled
            'drawLabelsEnabled':
                getter: drawLabelsEnabled
            'drawLimitLinesBehindDataEnabled':
                getter: drawLimitLinesBehindDataEnabled
            'forceLabelsEnabled':
                getter: forceLabelsEnabled
            'centerAxisLabelsEnabled':
                getter: centerAxisLabelsEnabled
        methods:
            '-setLabelCount:force:':
                name: setLabelCount
            '-calculateWithMin:max:':
                name: calculate
    ChartAxisRendererBase:
        methods:
            '-initWithViewPortHandler:transformer:axis:':
                name: init
            '-computeAxisWithMin:max:inverted:':
                name: computeAxis
            '-computeAxisValuesWithMin:max:':
                name: computeAxis
            '-renderAxisLabelsWithContext:':
                name: renderAxisLabels
            '-renderGridLinesWithContext:':
                name: renderGridLines
            '-renderAxisLineWithContext:':
                name: renderAxisLine
            '-renderLimitLinesWithContext:':
                name: renderLimitLines
    ChartBaseDataSet:
        properties:
            'highlightEnabled':
                getter: highlightEnabled
            'drawValuesEnabled':
                getter: drawValuesEnabled
            'drawIconsEnabled':
                getter: drawIconsEnabled
            'visible':
                getter: visible
        methods:
            '-calcMinMaxYFromX:toX:':
                name: calcMinMaxY
            '-entryForXValue:closestToY:rounding:':
                name: getEntryForX
            '-entryForXValue:closestToY:':
                name: getEntryForX
            '-entryIndexWithX:closestToY:rounding:':
                name: getEntryIndex
            '-setColor:alpha:':
                name: setColor
            '-setColors:alpha:':
                name: setColors
            '-initWithLabel:':
                name: init
            '-copyWithZone:':
                name: copy
    ChartColorTemplates: {}
    ChartComponentBase:
        properties:
            'enabled':
                getter: enabled
    ChartData:
        properties:
            'highlightEnabled':
                getter: highlightEnabled
        methods:
            '-calcMinMaxYFromX:toX:':
                name: calcMinMaxY
            '-calcMinMaxWithEntry:axis:':
                name: calcMinMax
            '-getDataSetIndexByLabel:ignorecase:':
                name: getDataSetIndex
            '-getDataSetByLabel:ignorecase:':
                name: getDataSet
            '-addEntry:dataSetIndex:':
                name: addEntry
            '-removeEntry:dataSetIndex:':
                name: removeEntry
            '-removeEntryWithXValue:dataSetIndex:':
                name: removeEntry
            '-initWithDataSets:':
                name: init
            '-initWithDataSet:':
                name: init
            '-calcMinMaxWithDataSet:':
                name: calcMinMax
            '-getYMinWithAxis:':
                name: getYMin
            '-getYMaxWithAxis:':
                name: getYMax
            '-getFirstLeftWithDataSets:':
                name: getFirstLeft
            '-getFirstRightWithDataSets:':
                name: getFirstRight
            '-containsWithDataSet:':
                name: contains
    ChartDataApproximator:
        methods:
            '+reduceWithDouglasPeuker:tolerance:':
                name: reduceWithDouglasPeuker
            '+reduceWithDouglasPeukerN:resultCount:':
                name: reduceWithDouglasPeuker
    ChartDataEntry:
        methods:
            '-initWithX:y:':
                name: init
            '-initWithX:y:data:':
                name: init
            '-initWithX:y:icon:':
                name: init
            '-initWithX:y:icon:data:':
                name: init
            '-copyWithZone:':
                name: copy
    ChartDataEntryBase:
        methods:
            '-initWithY:':
                name: init
            '-initWithY:data:':
                name: init
            '-initWithY:icon:':
                name: init
            '-initWithY:icon:data:':
                name: init
    ChartDataRendererBase:
        methods:
            '-initWithAnimator:viewPortHandler:':
                name: init
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-drawDataWithContext:':
                name: drawData
            '-drawValuesWithContext:':
                name: drawValues
            '-drawExtrasWithContext:':
                name: drawExtras
            '-isDrawingValuesAllowedWithDataProvider:':
                name: isDrawingValuesAllowed
            '-createAccessibleHeaderUsingChart:andData:withDefaultDescription:':
                name: createAccessibleHeaderUsingChart
    ChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
            '-calcMinMaxYFromX:toX:':
                name: calcMinMaxY
            '-entryForXValue:closestToY:rounding:':
                name: getEntryForX
            '-entryForXValue:closestToY:':
                name: getEntryForX
            '-entryIndexWithX:closestToY:rounding:':
                name: getEntryIndex
            '-initWithValues:':
                name: init
            '-calcMinMaxXWithEntry:':
                name: calcMinMaxX
            '-calcMinMaxYWithEntry:':
                name: calcMinMaxY
    ChartDefaultAxisValueFormatter:
        methods:
            '-initWithFormatter:':
                name: init
            '-initWithDecimals:':
                name: init
            '-initWithBlock:':
                name: init
            '-stringForValue:axis:':
                name: getStringForValue
    ChartDefaultFillFormatter:
        methods:
            '-getFillLinePositionWithDataSet:dataProvider:':
                name: getFillLinePosition
            '-initWithBlock:':
                name: init
    ChartDefaultValueFormatter:
        methods:
            '-stringForValue:entry:dataSetIndex:viewPortHandler:':
                name: getStringForValue
            '-initWithFormatter:':
                name: init
            '-initWithDecimals:':
                name: init
            '-initWithBlock:':
                name: init
    ChartDescription: {}
    ChartFill:
        methods:
            '-initWithCGColor:':
                name: init
            '-initWithColor:':
                name: init
            '-initWithLinearGradient:angle:':
                name: init
            '-initWithRadialGradient:startOffsetPercent:startRadiusPercent:endOffsetPercent:endRadiusPercent:':
                name: init
            '-initWithRadialGradient:':
                name: init
            '-initWithCGImage:tiled:':
                name: init
            '-initWithImage:tiled:':
                name: init
            '-initWithCGImage:':
                name: init
            '-initWithImage:':
                name: init
            '-initWithCGLayer:':
                name: init
            '-fillPathWithContext:rect:':
                name: fillPath
            '+fillWithLinearGradient:angle:':
                exclude: true
            '+fillWithRadialGradient:startOffsetPercent:startRadiusPercent:endOffsetPercent:endRadiusPercent:':
                exclude: true
            '+fillWithCGImage:tiled:':
                exclude: true
            '+fillWithImage:tiled:':
                exclude: true
            '+fillWithCGColor:':
                exclude: true
            '+fillWithColor:':
                exclude: true
            '+fillWithRadialGradient:':
                exclude: true
            '+fillWithCGImage:':
                exclude: true
            '+fillWithImage:':
                exclude: true
            '+fillWithCGLayer:':
                exclude: true
    ChartHighlight:
        methods:
            '-initWithX:y:xPx:yPx:dataIndex:dataSetIndex:stackIndex:axis:':
                name: init
            '-initWithX:y:xPx:yPx:dataSetIndex:stackIndex:axis:':
                name: init
            '-initWithX:y:xPx:yPx:dataSetIndex:axis:':
                name: init
            '-initWithX:y:dataSetIndex:dataIndex:':
                name: init
            '-initWithX:dataSetIndex:stackIndex:':
                name: init
            '-setDrawWithX:y:':
                name: setDraw
            '-setDrawWithPt:':
                name: setDraw
    ChartHighlighter:
        skip_def_constructor: true # as new will be def one
        methods:
            '-initWithChart:':
                name: init
            '-getHighlightWithX:y:':
                name: getHighlight
            '-getValsForTouchWithX:y:':
                name: getValsForTouch
            '-getHighlightWithXValue:x:y:':
                name: getHighlight
            '-getHighlightsWithXValue:x:y:':
                name: getHighlights
            '-buildHighlightsWithDataSet:dataSetIndex:xValue:rounding:':
                name: buildHighlights
            '-getMinimumDistanceWithClosestValues:y:axis:':
                name: getMinimumDistance
            '-getDistanceWithX1:y1:x2:y2:':
                name: getDistance
            '+new':
                name: newHighlighter
                constructor: true

    ChartIndexAxisValueFormatter:
        methods:
            '-initWithValues:':
                name: init
            '-stringForValue:axis:':
                name: getStringForValue
    ChartLegend:
        properties:
            'wordWrapEnabled':
                getter: wordWrapEnabled
        methods:
            '-calculateDimensionsWithLabelFont:viewPortHandler:':
                name: calculateDimensions
            '-initWithColors:labels:':
                name: init
            '-setExtraWithColors:labels:':
                name: setExtra
            '-setCustomWithColors:labels:':
                name: setCustom
            '-initWithEntries:':
                name: init
            '-getMaximumEntrySizeWithFont:':
                name: getMaximumEntrySize
            '-setCustomWithEntries:':
                name: setCustom
    ChartLegendEntry:
        methods:
            '-initWithLabel:form:formSize:formLineWidth:formLineDashPhase:formLineDashLengths:formColor:':
                name: init
    ChartLegendRenderer:
        methods:
            '-initWithViewPortHandler:legend:':
                name: init
            '-drawFormWithContext:x:y:entry:legend:':
                name: drawForm
            '-drawLabelWithContext:x:y:label:font:textColor:':
                name: drawLabel
            '-computeLegendWithData:':
                name: computeLegend
            '-renderLegendWithContext:':
                name: renderLegend
    ChartLimitLine:
        methods:
            '-initWithLimit:label:':
                name: init
            '-initWithLimit:':
                name: init
    ChartMarkerImage:
        methods:
            '-refreshContentWithEntry:highlight:':
                name: refreshContent
            '-drawWithContext:point:':
                name: draw
    ChartMarkerView:
        methods:
            '-refreshContentWithEntry:highlight:':
                name: refreshContent
            '-drawWithContext:point:':
                name: draw
    ChartRange:
        skip_def_constructor: true # as new will be def one
        methods:
            '-initFrom:to:':
                name: init
            '+new':
                name: newRange
                constructor: true
    ChartRenderer:
        skip_def_constructor: true # as new will be def one
        methods:
            '-initWithViewPortHandler:':
                name: init
            '+new':
                name: newRenderer
                constructor: true
    ChartTransformer:
        skip_def_constructor: true # as new will be def one
        methods:
            '-prepareMatrixValuePxWithChartXMin:deltaX:deltaY:chartYMin:':
                name: prepareMatrixValuePx
            '-pixelForValuesWithX:y:':
                name: getPixelForValues
            '-valueForTouchPointWithX:y:':
                name: getValueForTouchPoint
            '-initWithViewPortHandler:':
                name: init
            '-prepareMatrixOffsetWithInverted:':
                name: prepareMatrixOffset
            '+new':
                name: newTransformer
                constructor: true
    ChartTransformerHorizontalBarChart: {}
    ChartViewBase:
        properties:
            'dragDecelerationEnabled': # fix for duplicate
                getter: dragDecelerationEnabled
        methods:
            '-setExtraOffsetsWithLeft:top:right:bottom:':
                name: setExtraOffsets
            '-setupDefaultFormatterWithMin:max:':
                name: setupDefaultFormatter
            '-highlightValueWithX:dataSetIndex:':
                name: highlightValue
            '-highlightValueWithX:y:dataSetIndex:':
                name: highlightValue
            '-highlightValueWithX:dataSetIndex:callDelegate:':
                name: highlightValue
            '-highlightValueWithX:y:dataSetIndex:callDelegate:':
                name: highlightValue
            '-highlightValue:callDelegate:':
                name: highlightValue
            '-animateWithXAxisDuration:yAxisDuration:easingX:easingY:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easingOptionX:easingOptionY:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easing:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:easingOption:':
                name: animate
            '-animateWithXAxisDuration:yAxisDuration:':
                name: animate
            '-animateWithXAxisDuration:easing:':
                name: animateXAxis
            '-animateWithXAxisDuration:easingOption:':
                name: animateXAxis
            '-animateWithYAxisDuration:easing:':
                name: animateYAxis
            '-animateWithYAxisDuration:easingOption:':
                name: animateYAxis
            '-observeValueForKeyPath:ofObject:change:context:':
                name: observeValue
            '-nsuiTouchesBegan:withEvent:':
                name: nsuiTouchesBegan
            '-nsuiTouchesMoved:withEvent:':
                name: nsuiTouchesMoved
            '-nsuiTouchesEnded:withEvent:':
                name: nsuiTouchesEnded
            '-nsuiTouchesCancelled:withEvent:':
                name: nsuiTouchesCancelled
            '-highlightValues:':
                name: setHighlightValues
            '-highlightValueWithX:dataSetIndex:dataIndex:':
                name: highlightValue
            '-highlightValueWithX:y:dataSetIndex:dataIndex:':
                name: highlightValue
            '-highlightValueWithX:dataSetIndex:dataIndex:callDelegate:':
                name: highlightValue
            '-highlightValueWithX:y:dataSetIndex:dataIndex:callDelegate:':
                name: highlightValue
            '-getMarkerPositionWithHighlight:':
                name: getMarkerPosition
            '-animateWithXAxisDuration:':
                name: animateXAxis
            '-animateWithYAxisDuration:':
                name: animateYAxis
            '-getChartImageWithTransparent:':
                name: getChartImage
    ChartViewPortHandler:
        skip_def_constructor: true # as new will be def one
        methods:
            '-initWithWidth:height:':
                name: init
            '-setChartDimensWithWidth:height:':
                name: setChartDimens
            '-restrainViewPortWithOffsetLeft:offsetTop:offsetRight:offsetBottom:':
                name: restrainViewPort
            '-zoomWithScaleX:scaleY:':
                name: zoom
            '-zoomWithScaleX:scaleY:x:y:':
                name: zoom
            '-zoomInX:y:':
                name: zoomIn
            '-zoomOutWithX:y:':
                name: zoomOut
            '-setZoomWithScaleX:scaleY:':
                name: setZoom
            '-setZoomWithScaleX:scaleY:x:y:':
                name: setZoom
            '-centerViewPortWithPt:chart:':
                name: centerViewPort
            '-refreshWithNewMatrix:chart:invalidate:':
                name: refresh
            '-setMinMaxScaleXWithMinScaleX:maxScaleX:':
                name: setMinMaxScaleX
            '-setMinMaxScaleYWithMinScaleY:maxScaleY:':
                name: setMinMaxScaleY
            '-isInBoundsWithX:y:':
                name: isInBounds
            '-translateWithPt:':
                name: translate
            '+new':
                name: newViewPortHandler
                constructor: true

    ChartViewPortJob:
        skip_def_constructor: true # as new will be def one
        methods:
            '-initWithViewPortHandler:xValue:yValue:transformer:view:':
                name: init
            '+new':
                name: newJob
                constructor: true
    ChartXAxis:
        properties:
            'avoidFirstLastClippingEnabled':
                getter: avoidFirstLastClippingEnabled
            'wordWrapEnabled':
                getter: wordWrapEnabled
    ChartXAxisRenderer:
        methods:
            '-initWithViewPortHandler:xAxis:transformer:':
                name: init
            '-computeAxisWithMin:max:inverted:':
                name: computeAxis
            '-computeAxisValuesWithMin:max:':
                name: computeAxisValues
            '-drawLabelsWithContext:pos:anchor:':
                name: drawLabels
            '-drawLabelWithContext:formattedLabel:x:y:attributes:constrainedToSize:anchor:angleRadians:':
                name: drawLabel
            '-drawGridLineWithContext:x:y:':
                name: drawGridLine
            '-renderLimitLineLineWithContext:limitLine:position:':
                name: renderLimitLineLine
            '-renderLimitLineLabelWithContext:limitLine:position:yOffset:':
                name: renderLimitLineLabel
    ChartYAxis:
        properties:
            'inverted':
                getter: inverted
            'drawBottomYLabelEntryEnabled':
                getter: drawBottomYLabelEntryEnabled
            'drawTopYLabelEntryEnabled':
                getter: drawTopYLabelEntryEnabled
        methods:
            '-initWithPosition:':
                name: init
            '-calculateWithMin:max:':
                name: calculate
    ChartYAxisRenderer:
        methods:
            '-drawZeroLineWithContext:':
                name: drawZeroLine
            '-initWithViewPortHandler:yAxis:transformer:':
                name: init
            '-drawYLabelsWithContext:fixedPosition:positions:offset:textAlign:':
                name: drawYLabels
            '-drawGridLineWithContext:position:':
                name: drawGridLine
    ChevronDownShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    ChevronUpShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    CircleShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    CombinedChartData:
        properties:
            'highlightEnabled':
                getter: highlightEnabled
        methods:
            '-removeEntry:dataSetIndex:':
                name: removeEntry
            '-removeEntryWithXValue:dataSetIndex:':
                name: removeEntry
    CombinedChartHighlighter:
        methods:
            '-initWithChart:barDataProvider:':
                name: init
            '-getHighlightsWithXValue:x:y:':
                name: getHighlights
    CombinedChartRenderer:
        properties:
            'drawValueAboveBarEnabled':
                getter: drawValueAboveBarEnabled
            'drawBarShadowEnabled':
                getter: drawBarShadowEnabled
        methods:
            '-initWithChart:animator:viewPortHandler:':
                name: init
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-getSubRendererWithIndex:':
                name: getSubRenderer
    CombinedChartView:
        properties:
            'drawValueAboveBarEnabled':
                getter: drawValueAboveBarEnabled
            'drawBarShadowEnabled':
                getter: drawBarShadowEnabled
            'highlightFullBarEnabled':
                getter: highlightFullBarEnabled
    CrossShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    HorizontalBarChartHighlighter:
        methods:
            '-getHighlightWithX:y:':
                name: getHighlight
            '-buildHighlightsWithDataSet:dataSetIndex:xValue:rounding:':
                name: buildHighlights
            '-getDistanceWithX1:y1:x2:y2:':
                name: getDistance
    HorizontalBarChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:index:':
                name: drawDataSet
            '-setHighlightDrawPosWithHighlight:barRect:':
                name: setHighlightDrawPos
    HorizontalBarChartView:
        methods:
            '-getPositionWithEntry:axis:':
                name: getPosition
            '-setVisibleXRangeWithMinXRange:maxXRange:':
                name: setVisibleXRange
            '-setVisibleYRangeMaximum:axis:':
                name: setVisibleYRangeMaximum$axis$
            '-setVisibleYRangeMinimum:axis:':
                name: setVisibleYRange
            '-setVisibleYRangeWithMinYRange:maxYRange:axis:':
                name: setVisibleYRange
    LineChartData: {}
    LineChartDataSet:
        properties:
            'drawCubicEnabled':
                getter: drawCubicEnabled
            'drawSteppedEnabled':
                getter: drawSteppedEnabled
            'drawCirclesEnabled':
                getter: drawCirclesEnabled
            'drawCircleHoleEnabled':
                getter: drawCircleHoleEnabled
        methods:
            '-initWithValues:label:':
                name: init
    LineChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:':
                name: drawDataSet
            '-drawCubicBezierWithContext:dataSet:':
                name: drawCubicBezier
            '-drawHorizontalBezierWithContext:dataSet:':
                name: drawHorizontalBezier
            '-drawLinearWithContext:dataSet:':
                name: drawLinear
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
    LineChartView: {}
    LineRadarChartDataSet:
        properties:
            'drawFilledEnabled':
                getter: drawFilledEnabled
        methods:
            '-initWithValues:label:':
                name: init
    LineRadarChartRenderer:
        methods:
            '-initWithAnimator:viewPortHandler:':
                name: init
            '-drawFilledPathWithContext:path:fill:fillAlpha:':
                name: drawFilledPath
            '-drawFilledPathWithContext:path:fillColor:fillAlpha:':
                name: drawFilledPath
    LineScatterCandleRadarChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
    LineScatterCandleRadarChartRenderer:
        methods:
            '-initWithAnimator:viewPortHandler:':
                name: init
            '-drawHighlightLinesWithContext:point:set:':
                name: drawHighlightLines
    MoveChartViewJob:
        methods:
            '-initWithViewPortHandler:xValue:yValue:transformer:view:':
                name: init
    NSUIView:
        methods:
            '-touchesBegan:withEvent:':
                name: touchesBegan
            '-touchesMoved:withEvent:':
                name: touchesMoved
            '-touchesEnded:withEvent:':
                name: touchesEnded
            '-touchesCancelled:withEvent:':
                name: touchesCancelled
            '-nsuiTouchesBegan:withEvent:':
                name: nsuiTouchesBegan
            '-nsuiTouchesMoved:withEvent:':
                name: nsuiTouchesMoved
            '-nsuiTouchesEnded:withEvent:':
                name: nsuiTouchesEnded
            '-nsuiTouchesCancelled:withEvent:':
                name: nsuiTouchesCancelled
    PieChartData:
        methods:
            '-getDataSetByLabel:ignorecase:':
                name: getDataSet
    PieChartDataEntry:
        methods:
            '-initWithValue:label:':
                name: init
            '-initWithValue:label:data:':
                name: init
            '-initWithValue:label:icon:':
                name: init
            '-initWithValue:label:icon:data:':
                name: init
            '-initWithValue:':
                name: init
            '-initWithValue:data:':
                name: init
            '-initWithValue:icon:':
                name: init
            '-initWithValue:icon:data:':
                name: init
    PieChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
    PieChartHighlighter:
        methods:
            '-closestHighlightWithIndex:x:y:':
                name: getClosestHighlight
    PieChartRenderer:
        methods:
            '-initWithChart:animator:viewPortHandler:':
                name: init
            '-calculateMinimumRadiusForSpacedSliceWithCenter:radius:angle:arcStartPointX:arcStartPointY:startAngle:sweepAngle:':
                name: calculateMinimumRadiusForSpacedSliceWithCenter
            '-drawDataSetWithContext:dataSet:':
                name: drawDataSet
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-getSliceSpaceWithDataSet:':
                name: getSliceSpace
    PieChartView:
        properties:
            'drawSlicesUnderHoleEnabled':
                getter: drawSlicesUnderHoleEnabled
            'drawHoleEnabled':
                getter: drawHoleEnabled
            'drawCenterTextEnabled':
                getter: drawCenterTextEnabled
            'drawSliceTextEnabled':
                getter: drawSliceTextEnabled
            'drawEntryLabelsEnabled':
                getter: drawEntryLabelsEnabled
            'usePercentValuesEnabled':
                getter: usePercentValuesEnabled
        methods:
            '-needsHighlightWithIndex:':
                name: needsHighlight
    PieRadarChartHighlighter:
        methods:
            '-getHighlightWithX:y:':
                name: getHighlight
            '-closestHighlightWithIndex:x:y:':
                name: getClosestHighlight
    PieRadarChartViewBase:
        properties:
            'rotationEnabled':
                getter: rotationEnabled
            'rotationWithTwoFingers':
                getter: rotationWithTwoFingers
        methods:
            '-angleForPointWithX:y:':
                name: getAngleForPoint
            '-getPositionWithCenter:dist:angle:':
                name: getPosition
            '-distanceToCenterWithX:y:':
                name: getDistanceToCenter
            '-spinWithDuration:fromAngle:toAngle:easing:':
                name: spin
            '-spinWithDuration:fromAngle:toAngle:easingOption:':
                name: spin
            '-spinWithDuration:fromAngle:toAngle:':
                name: spin
            '-nsuiTouchesBegan:withEvent:':
                name: nsuiTouchesBegan
            '-nsuiTouchesMoved:withEvent:':
                name: nsuiTouchesMoved
            '-nsuiTouchesEnded:withEvent:':
                name: nsuiTouchesEnded
            '-nsuiTouchesCancelled:withEvent:':
                name: nsuiTouchesCancelled
    RadarChartData: {}
    RadarChartDataEntry:
        methods:
            '-initWithValue:':
                name: init
            '-initWithValue:data:':
                name: init
    RadarChartDataSet:
        properties:
            'drawHighlightCircleEnabled':
                getter: drawHighlightCircleEnabled
        methods:
            '-initWithValues:label:':
                name: init
    RadarChartHighlighter:
        methods:
            '-closestHighlightWithIndex:x:y:':
                name: getClosestHighlight
    RadarChartRenderer:
        methods:
            '-initWithChart:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:mostEntries:':
                name: drawDataSet
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
            '-drawHighlightCircleWithContext:atPoint:innerRadius:outerRadius:fillColor:strokeColor:strokeWidth:':
                name: drawHighlightCircle
            '-drawWebWithContext:':
                name: drawWeb
    RadarChartView: {}
    ScatterChartData: {}
    ScatterChartDataSet:
        methods:
            '-initWithValues:label:':
                name: init
    ScatterChartRenderer:
        methods:
            '-initWithDataProvider:animator:viewPortHandler:':
                name: init
            '-drawDataSetWithContext:dataSet:':
                name: drawData
            '-drawHighlightedWithContext:indices:':
                name: drawHighlighted
    ScatterChartView: {}
    SquareShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    TriangleShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    XAxisRendererHorizontalBarChart:
        methods:
            '-initWithViewPortHandler:xAxis:transformer:chart:':
                name: init
            '-computeAxisWithMin:max:inverted:':
                name: computeAxis
            '-drawLabelsWithContext:pos:anchor:':
                name: drawLabels
            '-drawLabelWithContext:formattedLabel:x:y:attributes:anchor:angleRadians:':
                name: drawLabel
            '-drawGridLineWithContext:x:y:':
                name: drawGridLine
    XAxisRendererRadarChart:
        methods:
            '-initWithViewPortHandler:xAxis:chart:':
                name: init
            '-drawLabelWithContext:formattedLabel:x:y:attributes:anchor:angleRadians:':
                name: drawLabel
    XShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    YAxisRendererHorizontalBarChart:
        methods:
            '-initWithViewPortHandler:yAxis:transformer:':
                name: init
            '-computeAxisWithMin:max:inverted:':
                name: computeAxis
            '-drawYLabelsWithContext:fixedPosition:positions:offset:':
                name: drawYLabels
            '-drawGridLineWithContext:position:':
                name: drawGridLine
    YAxisRendererRadarChart:
        methods:
            '-initWithViewPortHandler:yAxis:chart:':
                name: init
            '-computeAxisValuesWithMin:max:':
                name: computeAxisValues
    ZoomChartViewJob:
        methods:
            '-initWithViewPortHandler:scaleX:scaleY:xValue:yValue:transformer:axis:view:':
                name: init
    NSUIAccessibilityElement:
        skip_def_constructor: true # as new will be def one
        methods:
            '+new':
                name: newElement
                constructor: true


protocols:
    BarChartDataProvider: {}
    BarLineScatterCandleBubbleChartDataProvider:
        methods:
            '-isInvertedWithAxis:':
                name: isInverted
    BubbleChartDataProvider: {}
    CandleChartDataProvider: {}
    ChartAnimatorDelegate: {}
    ChartDataProvider: {}
    ChartViewDelegate:
        methods:
            '-chartValueSelected:entry:highlight:':
                name: chartValueSelected
            '-chartScaled:scaleX:scaleY:':
                name: chartScaled
            '-chartTranslated:dX:dY:':
                name: chartTranslated
    CombinedChartDataProvider: {}
    IBarChartDataSet: {}
    IBarLineScatterCandleBubbleChartDataSet: {}
    IBubbleChartDataSet: {}
    ICandleChartDataSet:
        properties:
            'shadowColorSameAsCandle':
                getter: shadowColorSameAsCandle
            'increasingFilled':
                getter: increasingFilled
            'decreasingFilled':
                getter: decreasingFilled
    IChartAxisValueFormatter:
        methods:
            '-stringForValue:axis:':
                name: getStringForValue
    IChartDataSet:
        properties:
            'highlightEnabled':
                getter: highlightEnabled
            'drawValuesEnabled':
                getter: drawValuesEnabled
            'drawIconsEnabled':
                getter: drawIconsEnabled
            'visible':
                getter: visible
        methods:
            '-calcMinMaxYFromX:toX:':
                name: calcMinMaxY
            '-entryForXValue:closestToY:rounding:':
                name: getEntryForX
            '-entryForXValue:closestToY:':
                name: getEntryForX
            '-entryIndexWithX:closestToY:rounding:':
                name: getEntryIndex
            '-entryIndexWithEntry:':
                name: getEntryIndex
            '-removeEntryWithIndex:':
                name: removeEntry
            '-removeEntryWithX:':
                name: removeEntryWithX

    IChartFillFormatter:
        methods:
            '-getFillLinePositionWithDataSet:dataProvider:':
                name: getFillLinePosition
    IChartHighlighter:
        methods:
            '-getHighlightWithX:y:':
                name: getHighlight
    IChartMarker:
        methods:
            '-refreshContentWithEntry:highlight:':
                name: refreshContent
            '-drawWithContext:point:':
                name: draw
    IChartValueFormatter:
        methods:
            '-stringForValue:entry:dataSetIndex:viewPortHandler:':
                name: getStringForValue
    ILineChartDataSet:
        properties:
            'drawCubicEnabled':
                getter: drawCubicEnabled
            'drawSteppedEnabled':
                getter: drawSteppedEnabled
            'drawCirclesEnabled':
                getter: drawCirclesEnabled
            'drawCircleHoleEnabled':
                getter: drawCircleHoleEnabled
    ILineRadarChartDataSet:
        properties:
            'drawFilledEnabled':
                getter: drawFilledEnabled
    ILineScatterCandleRadarChartDataSet: {}
    IPieChartDataSet: {}
    IRadarChartDataSet:
        properties:
            'drawHighlightCircleEnabled':
                getter: drawHighlightCircleEnabled
    IScatterChartDataSet: {}
    IShapeRenderer:
        methods:
            '-renderShapeWithContext:dataSet:viewPortHandler:point:color:':
                name: renderShape
    LineChartDataProvider: {}
    ScatterChartDataProvider: {}

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMeCharts
        name: 'Function_#{g[0]}'

values:
    # no interest in chart version today
    (ChartsVersion.*):
        exclude: true
    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMeCharts
        name: 'Value_#{g[0]}'

constants:
    (SWIFT_.*):
        exclude: true
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMeCharts
        name: 'Constant__#{g[0]}'
