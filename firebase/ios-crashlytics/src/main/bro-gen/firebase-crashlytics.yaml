package: org.robovm.pods.firebase.crashlytics
framework: FirebaseCrashlytics
internal_frameworks: [FirebaseRemoteConfigInterop]
include: [foundation]
clang_args: ['-x', 'objective-c']
headers: 
    - FirebaseCrashlytics.h
    - FirebaseCrashlytics-Swift.h
    - "#include <FirebaseRemoteConfigInterop/FirebaseRemoteConfigInterop-Swift.h>"
enums: {}


classes:
    FIRCrashlytics:
        methods:
            '-logWithFormat:':
                # FIXME: variadic, manually implemented as having no argument
                name: log
            '-logWithFormat:arguments:':
                exclude: true # variadic and duplicate logWithFormat
            '-setCustomValue:forKey:':
                name: setCustomValue
            '-checkForUnsentReportsWithCompletion:':
                name: checkForUnsentReports
            '-checkAndUpdateUnsentReportsWithCompletion:':
                name: checkAndUpdateUnsentReports
            '-recordError:userInfo:':
                name: recordError
    FIRExceptionModel:
        methods:
            '-initWithName:reason:':
                name: init
            '+exceptionModelWithName:reason:':
                exclude: true # as duplicate constructor
    FIRStackFrame:
        methods:
            '-initWithSymbol:file:line:':
                name: init
            '+stackFrameWithSymbol:file:line:':
                exclude: true # as duplicate constructor
            '+stackFrameWithAddress:':
                constructor: true
                name: create
    FIRCrashlyticsReport:
        methods:
            '-logWithFormat:':
              name: log
            '-logWithFormat:arguments:':
              name: log
            '-setCustomValue:forKey:':
              name: setCustomValue
    FIRCLSRemoteConfigManager:
        methods:
            '-initWithRemoteConfig:persistenceDelegate:':
                name: init
            '-updateRolloutsStateWithRolloutsState:reportID:':
                name: updateRolloutsState
    FIRCLSwiftFileUtility: { }
    FIRRemoteConfigConstants: { }
    FIRRolloutAssignment:
        methods:
            '-initWithRolloutId:variantId:templateVersion:parameterKey:parameterValue:':
                name: init
    FIRRolloutsState:
        methods:
            '-initWithAssignmentList:':
                name: init
protocols:
    FIRCLSPersistenceLog:
        methods:
            '-updateRolloutsStateToPersistenceWithRollouts:reportID:':
                name: updateRolloutsStateToPersistence
            '-debugLogWithMessage:':
                name: debugLog
    FIRRemoteConfigInterop:
        methods:
            '-registerRolloutsStateSubscriber:for:':
                name: registerRolloutsStateSubscriber
    FIRRolloutsStateSubscriber: { }
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    SWIFT_.*:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
