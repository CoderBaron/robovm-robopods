package: org.robovm.pods.google.mobileads
include: [foundation, coregraphics, storekit, uikit, coreanimation, webkit]
clang_args: ['-x', 'objective-c']
framework: GoogleMobileAds
headers:
    - GoogleMobileAds.h

private_typedefs: {}

typedefs: {}

enums:
    GADAdapterInitializationState: {}
    GADAdFormat: {}
    GADAdValuePrecision: {}
    GADGender: {prefix: kGADGender}
    GADErrorCode: {prefix: GADError, nserror: true }
    GADMediaAspectRatio: {}
    GADPresentationErrorCode: {}
    GADNativeAdImageAdLoaderOptionsOrientation: {}
    GADAdChoicesPosition: {}
    GADMBannerAnimationType: {prefix: GADMBannerAnimationType, ignore: "kGADMBannerAnimationType.*"}
    GADMediationErrorCode: {exclude: true} # deprecated Use GADErrorCode
typed_enums:
    GADAdLoaderAdType:
        enum: GADAdLoaderAdType
        type: NSString
        prefix: GADAdLoaderAdType
    GADNativeAssetIdentifier:
        enum: GADNativeAssetIdentifier
        type: NSString
        prefix: GADNative
    GADMaxAdContentRating:
        enum: GADMaxAdContentRating
        type: NSString
        prefix: GADMaxAdContentRating

classes:
    # structs
    GADAdSize: {}
    GADVersionNumber: {}

    # classes
    GADAdChoicesView: {}
    GADAdLoader:
        methods:
            '-initWithAdUnitID:rootViewController:adTypes:options:':
                name: init
    GADAdLoaderOptions: {}
    GADAdReward:
        methods:
            '-initWithRewardType:rewardAmount:':
                name: init
    GADAdValue: {}
    GADAdapterStatus: {}
    GADAppOpenAd:
        methods:
            '+loadWithAdUnitID:request:orientation:completionHandler:':
                name: load
            '+loadWithAdUnitID:request:completionHandler:':
                name: load
            '-canPresentFromRootViewController:error:':
                name: canPresentFromRootViewController
    GADAppOpenAdView: {}
    GADAudioVideoManager: {}
    GADBannerView:
        methods:
            '-initWithAdSize:origin:':
                name: init
            '-initWithAdSize:':
                name: init
    GADCustomEventExtras:
        methods:
            '-setExtras:forLabel:':
                name: setExtras
    GADCustomEventRequest: {}
    GADDebugOptionsViewController:
        methods:
            '+debugOptionsViewControllerWithAdUnitID:':
                name: createDebugOptionsViewController
    GADDefaultInAppPurchase:
        methods:
            '+enableDefaultPurchaseFlowWithDelegate:':
                name: enableDefaultPurchaseFlow
    GADDelayedAdRenderingOptions: {}
    GADDisplayAdMeasurement:
        methods:
            '-startWithError:':
                name: start
    GADDynamicHeightSearchRequest:
        methods:
            '-setAdvancedOptionValue:forKey:':
                name: setAdvancedOption
    GADExtras: {}
    GADInitializationStatus: {}
    GADMediaContent: {}
    GADMediaView: {}
    GADMediatedUnifiedNativeAdNotificationSource: {}
    GADMediationAdConfiguration: {}
    GADMediationBannerAdConfiguration: {}
    GADMediationCredentials: {}
    GADMediationInterstitialAdConfiguration: {}
    GADMediationNativeAdConfiguration: {}
    GADMediationRewardedAdConfiguration: {}
    GADMediationServerConfiguration: {}
    GADMobileAds:
        methods:
            '-isSDKVersionAtLeastMajor:minor:patch:':
                name: isSDKVersionAtLeast
            '-startWithCompletionHandler:':
                name: start
            '+configureWithApplicationID:':
                name: configure
            '+disableAutomatedInAppPurchaseReporting':
                name: DisableAutomatedInAppPurchaseReporting
            '+disableSDKCrashReporting':
                name: DisableSDKCrashReporting
            '-presentAdInspectorFromViewController:completionHandler:':
                name: presentAdInspector
    GADMultipleAdsAdLoaderOptions: {}
    GADMuteThisAdReason: {}
    GADNativeAd:
        methods:
            '-registerAdView:clickableAssetViews:nonclickableAssetViews:':
                name: registerAdView
            '-muteThisAdWithReason:':
                name: muteThisAd
    GADNativeAdImage:
        methods:
            '-initWithImage:':
                name: init
            '-initWithURL:scale:':
                name: init
    GADNativeAdImageAdLoaderOptions: {}
    GADNativeAdMediaAdLoaderOptions: {}
    GADNativeAdViewAdOptions: {}
    GADNativeMuteThisAdLoaderOptions: {}
    GADRTBMediationSignalsConfiguration: {}
    GADRTBRequestParameters: {}
    GADRequest:
        methods:
            '-setLocationWithLatitude:longitude:accuracy:':
                name: setLocation
            '-setBirthdayWithMonth:day:year:':
                name: setBirthday
            '-setLocationWithDescription:':
                name: setLocation
    GADRequestConfiguration: {}
    GADResponseInfo: {}
    GADRewardedAd:
        methods:
            '-initWithAdUnitID:':
                name: init
            '-loadRequest:completionHandler:':
                name: loadRequest
            '-canPresentFromRootViewController:error:':
                name: canPresent
            '-presentFromRootViewController:delegate:':
                name: present
            '-presentFromRootViewController:userDidEarnRewardHandler:':
                name: present
            '+loadWithAdUnitID:request:completionHandler:':
                name: load
    GADSearchBannerView: {}
    GADServerSideVerificationOptions: {}
    GADVideoController: {}
    GADVideoOptions: {}
    GADAdNetworkResponseInfo: {}
    GADRewardedInterstitialAd:
        methods:
            '-canPresentFromRootViewController:error:':
                name: canPresent
            '-presentFromRootViewController:userDidEarnRewardHandler:':
                name: present
            '+loadWithAdUnitID:request:completionHandler:':
                name: load
    GADCustomNativeAd:
        methods:
            '-performClickOnAssetWithKey:':
                name: performClickOnAsset
    GADInterstitialAd:
        methods:
            '-canPresentFromRootViewController:error:':
                name: canPresentFromRootViewController
            '+loadWithAdUnitID:request:completionHandler:':
                name: load
    GADNativeAdView: {}
    GAMBannerView: {}
    GAMBannerViewOptions: {}
    GAMInterstitialAd:
        methods:
            '+loadWithAdManagerAdUnitID:request:completionHandler:':
                name: load
    GAMRequest: {}
    GADNativeAdCustomClickGestureOptions:
        methods:
            '-initWithSwipeGestureDirection:tapsAllowed:':
                name: init
    GADQueryInfo:
        methods:
            '+createQueryInfoWithRequest:adFormat:completionHandler:':
                name: createQueryInfo
            '+createQueryInfoWithRequest:adFormat:adUnitID:completionHandler:':
                name: createQueryInfo
    GADMediationAppOpenAdConfiguration: { }
protocols:
    GADAdLoaderDelegate:
        methods:
            '-adLoaderDidFinishLoading:':
                name: didFinishLoading
            '-adLoader:didFailToReceiveAdWithError:':
                name: didFailToReceiveAd
    GADAdNetworkExtras:
        skip_adapter: true
    GADAdSizeDelegate:
        skip_adapter: true
        methods:
            '-adView:willChangeAdSizeTo:':
                name: willChangeAdSize
    GADAppEventDelegate:
        methods:
            '-adView:didReceiveAppEvent:withInfo:':
                name: didReceiveAppEvent
            '-interstitial:didReceiveAppEvent:withInfo:':
                name: didReceiveAppEvent
            '-interstitialAd:didReceiveAppEvent:withInfo:':
                name: didReceiveAppEvent
    GADAudioVideoManagerDelegate:
        methods:
            '-audioVideoManagerWillPlayVideo:':
                name: willPlayVideo
            '-audioVideoManagerDidPauseAllVideo:':
                name: didPauseAllVideo
            '-audioVideoManagerWillPlayAudio:':
                name: willPlayAudio
            'audioVideoManagerDidStopPlayingAudio:':
                name: didStopPlayingAudio
    GADBannerViewDelegate:
        methods:
            '-bannerViewDid(.*):':
                name: "did#{g[0]}"
            '-bannerViewWill(.*):':
                name: "will#{g[0]}"
            '-bannerView:didFailToReceiveAdWithError:':
                name: didFailToReceiveAd
    GADCustomEventBanner:
        skip_adapter: true
        methods:
            '-requestBannerAd:parameter:label:request:':
                name: requestBannerAd
    GADCustomEventBannerDelegate:
        methods:
            '-customEventBanner:didReceiveAd:':
                name: didReceiveAd
            '-customEventBanner:didFailAd:':
                name: didFailAd
            '-customEventBanner:clickDidOccurInAd:':
                name: clickDidOccurInAd
            '-customEventBannerWasClicked:':
                name: wasClicked
            '-customEventBannerWillPresentModal:':
                name: willPresentModal
            '-customEventBannerWillDismissModal:':
                name: willDismissModal
            '-customEventBannerDidDismissModal:':
                name: widDismissModal
            '-customEventBannerWillLeaveApplication:':
                name: willLeaveApplication

    GADCustomEventInterstitial:
        methods:
            '-requestInterstitialAdWithParameter:label:request:':
                name: requestInterstitialAd
    GADCustomEventInterstitialDelegate:
        methods:
            '-customEventInterstitial:didFailAd:':
                name: didFailAd
            '-customEventInterstitial:didReceiveAd:':
                name: didReceiveAd
            '-customEventInterstitialDidReceiveAd:':
                name: didReceiveAd
            '-customEventInterstitialWasClicked:':
                name: wasClicked
            '-customEventInterstitialWillPresent:':
                name: willPresent
            '-customEventInterstitialWillDismiss:':
                name: willDismiss
            '-customEventInterstitialDidDismiss:':
                name: didDismiss
            '-customEventInterstitialWillLeaveApplication:':
                name: willLeaveApplication
    GADCustomEventNativeAd:
        methods:
            '-requestNativeAdWithParameter:request:adTypes:options:rootViewController:':
                name: requestNativeAd
    GADCustomEventNativeAdDelegate:
        methods:
            '-customEventNativeAd:didFailToLoadWithError:':
                name: didFailToLoad
            '-customEventNativeAd:didReceiveMediatedUnifiedNativeAd:':
                name: didReceiveMediatedUnifiedNativeAd
    GADDebugOptionsViewControllerDelegate:
        skip_adapter: true
        methods:
            '-debugOptionsViewControllerDidDismiss:':
                name: didDismiss
    GADDelayedAdRenderingDelegate:
        skip_adapter: true
        methods:
            '-adLoader:shouldDelayRenderingWithResumeHandler:':
                name: shouldDelayRendering
    GADMAdNetworkAdapter:
        methods:
            '-initWithGADMAdNetworkConnector:':
                name: init
            '-getBannerWithSize:':
                name: getBanner
            '-getNativeAdWithAdTypes:options:':
                name: getNativeAd
    GADMAdNetworkConnector:
        methods:
            '-adapter:didFailAd:':
                name: didFailAd
            '-adapter:didReceiveAdView:':
                name: didReceiveAdView
            '-adapter:didReceiveMediatedUnifiedNativeAd:':
                name: didReceiveMediatedUnifiedNativeAd
            '-adapter:didReceiveInterstitial:':
                name: didReceiveInterstitial
            '-adapter:clickDidOccurInBanner:':
                name: clickDidOccurInBanner
            '-adapter:didFailInterstitial:':
                name: didFailInterstitial

            '-adapterDidReceiveInterstitial:':
                name: didReceiveInterstitial
            '-adapterDidGetAdClick:':
                name: didGetAdClick
            '-adapterWillLeaveApplication:':
                name: willLeaveApplication
            '-adapterWillPresentFullScreenModal:':
                name: willPresentFullScreenModal
            '-adapterWillDismissFullScreenModal:':
                name: willDismissFullScreenModal
            '-adapterDidDismissFullScreenModal:':
                name: widDismissFullScreenModal
            '-adapterWillPresentInterstitial:':
                name: willPresentInterstitial
            '-adapterWillDismissInterstitial:':
                name: willDismissInterstitial
            '-adapterDidDismissInterstitial:':
                name: didDismissInterstitial
    GADMRewardBasedVideoAdNetworkAdapter:
        methods:
            '-initWithRewardBasedVideoAdNetworkConnector:':
                name: init
            '-presentRewardBasedVideoAdWithRootViewController:':
                name: presentRewardBasedVideoAd
            '-initWithRewardBasedVideoAdNetworkConnector:credentials:':
                name: init
            '-initWithGADMAdNetworkConnector:':
                name: init
            '-setUpWithUserID:':
                name: setUp
    GADMRewardBasedVideoAdNetworkConnector:
        methods:
            '-adapter:didFailToSetUpRewardBasedVideoAdWithError:':
                name: didFailToSetUpRewardBasedVideoAd
            '-adapter:didRewardUserWithReward:':
                name: didRewardUser
            '-adapter:didFailToLoadRewardBasedVideoAdwithError:':
                name: didFailToLoadRewardBasedVideoAd
            '-adapterDidSetUpRewardBasedVideoAd:':
                name: didSetUpRewardBasedVideoAd
            '-adapterDidGetAdClick:':
                name: didGetAdClick
            '-adapterDidReceiveRewardBasedVideoAd:':
                name: didReceiveRewardBasedVideoAd
            '-adapterDidOpenRewardBasedVideoAd:':
                name: didOpenRewardBasedVideoAd
            '-adapterDidStartPlayingRewardBasedVideoAd:':
                name: didStartPlayingRewardBasedVideoAd
            '-adapterDidCompletePlayingRewardBasedVideoAd:':
                name: didCompletePlayingRewardBasedVideoAd
            '-adapterDidCloseRewardBasedVideoAd:':
                name: didCloseRewardBasedVideoAd
            '-adapterWillLeaveApplication:':
                name: willLeaveApplication
    GADMediatedUnifiedNativeAd:
        methods:
            '-didRenderInView:clickableAssetViews:nonclickableAssetViews:viewController:':
                name: didRenderInView
            '-didRecordClickOnAssetWithName:view:viewController:':
                name: didRecordClickOnAsset
    GADMediationAd:
        skip_adapter: true
    GADMediationAdEventDelegate:
        methods:
            '-didFailToPresentWithError:':
                name: didFailToPresent
    GADMediationAdRequest: {}
    GADMediationAdapter:
        methods:
            '-loadBannerForAdConfiguration:completionHandler:':
                name: loadBanner
            '-loadInterstitialForAdConfiguration:completionHandler:':
                name: loadInterstitial
            '-loadNativeAdForAdConfiguration:completionHandler:':
                name: loadNativeAd
            '-loadRewardedAdForAdConfiguration:completionHandler:':
                name: loadRewardedAd
            '+setUpWithConfiguration:completionHandler:':
                name: setUp
            '-loadRewardedInterstitialAdForAdConfiguration:completionHandler:':
                name: loadRewardedInterstitialAd
            '-loadInterscrollerAdForAdConfiguration:completionHandler:':
                name: loadInterscrollerAd
            '-loadAppOpenAdForAdConfiguration:completionHandler:':
                name: loadAppOpenAd
    GADMediationBannerAd: {}
    GADMediationBannerAdEventDelegate:
        skip_adapter: true
    GADMediationInterstitialAd:
        skip_adapter: true
    GADMediationInterstitialAdEventDelegate:
        skip_adapter: true
    GADMediationNativeAd: {}
    GADMediationNativeAdEventDelegate: {}
    GADMediationRewardedAd:
        skip_adapter: true
    GADMediationRewardedAdEventDelegate:
        methods:
            '-didRewardUserWithReward:':
                name: didRewardUser
    GADNativeAdDelegate:
        methods:
            '-nativeAdDidRecordImpression:':
                name: didRecordImpression
            '-nativeAdDidRecordClick:':
                name: didRecordClick
            '-nativeAdWillPresentScreen:':
                name: willPresentScreen
            '-nativeAdWillDismissScreen:':
                name: willDismissScreen
            '-nativeAdDidDismissScreen:':
                name: didDismissScreen
            '-nativeAdWillLeaveApplication:':
                name: willLeaveApplication
    GADRTBAdapter:
        skip_adapter: true
        methods:
            '-collectSignalsForRequestParameters:completionHandler:':
                name: collectSignals
    GADVideoControllerDelegate:
        methods:
            '-videoControllerDidPlayVideo:':
                name: didPlayVideo
            '-videoControllerDidPauseVideo:':
                name: didPauseVideo
            '-videoControllerDidEndVideoPlayback:':
                name: didEndVideoPlayback
            '-videoControllerDidMuteVideo:':
                name: didMuteVideo
            '-videoControllerDidUnmuteVideo:':
                name: didUnmuteVideo
    GADFullScreenContentDelegate:
        methods:
            '-ad:didFailToPresentFullScreenContentWithError:':
                name: didFailToPresentFullScreenContent
    GADFullScreenPresentingAd: {}
    GADAdMetadataDelegate: {}
    GADAdMetadataProvider: {}
    GADMediationInterscrollerAd: {}
    GADCustomNativeAdDelegate:
        methods:
            '-customNativeAdDid(.*):':
                name: "did#{g[0]}"
            '-customNativeAdWill(.*):':
                name: "will#{g[0]}"
    GADCustomNativeAdLoaderDelegate:
        methods:
            '-customNativeAdFormatIDsForAdLoader:':
                name: getAdFormatIDs
            '-adLoader:didReceiveCustomNativeAd:':
                name: didReceiveCustomNativeAd
    GADNativeAdLoaderDelegate:
        methods:
            '-adLoader:didReceiveNativeAd:':
                name: didReceiveNativeAd
    GADNativeAdUnconfirmedClickDelegate:
        methods:
            '-nativeAd:didReceiveUnconfirmedClickOnAssetID:':
                name: didReceiveUnconfirmedClickOnAssetID
    GAMBannerAdLoaderDelegate:
        methods:
            '-validBannerSizesForAdLoader:':
                name: getValidBannerSizes
            '-adLoader:didReceiveGAMBannerView:':
                name: didReceiveGAMBannerView
    GADMediationAppOpenAd: { }
    GADMediationAppOpenAdEventDelegate: { }
functions:
    # GADAdSize
    GADPortraitAnchoredAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getPortraitAnchoredAdaptiveBannerAdSize
    GADLandscapeAnchoredAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getLandscapeAnchoredAdaptiveBannerAdSize
    GADCurrentOrientationAnchoredAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getCurrentOrientationAnchoredAdaptiveBannerAdSize
    GADPortraitInlineAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getPortraitInlineAdaptiveBannerAdSize
    GADLandscapeInlineAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getLandscapeInlineAdaptiveBannerAdSize
    GADCurrentOrientationInlineAdaptiveBannerAdSizeWithWidth:
        class: GADAdSize
        name: getCurrentOrientationInlineAdaptiveBannerAdSize
    GADInlineAdaptiveBannerAdSizeWithWidthAndMaxHeight:
        class: GADAdSize
        name: getInlineAdaptiveBannerAdSize
    GADAdSizeFromCGSize:
        class: GADAdSize
        constructor: true
        name: createFromCGSize
    GADAdSizeFullWidthPortraitWithHeight:
        class: GADAdSize
        name: getAdSizeFullWidthPortrait
    GADAdSizeFullWidthLandscapeWithHeight:
        class: GADAdSize
        name: getAdSizeFullWidthLandscape
    GADAdSizeEqualToSize:
        class: GADAdSize
        name: equals
    CGSizeFromGADAdSize:
        class: GADAdSize
        name: toCGSize
    IsGADAdSizeValid:
        class: GADAdSize
        name: isValid
    GADAdSizeIsFluid:
        class: GADAdSize
        name: isFluid
    NSStringFromGADAdSize:
        class: GADAdSize
        name: toString
    NSValueFromGADAdSize:
        class: GADAdSize
        name: toNSValue
    GADAdSizeFromNSValue:
        class: GADAdSize
        constructor: true
        name: createFromFromNSValue
    GADClosestValidSizeForAdSizes:
        class: GADAdSize
        name: getClosestValidSize
    GADGetStringFromVersionNumber:
        class: GADMobileAds
        name: getStringFromVersionNumber

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    GADErrorDomain:
        class: GADErrorCode
        name: getClassDomain
    kGADErrorDomain:
        exclude: true
    GADCustomNativeAdMediaViewKey:
        class: GADCustomNativeAd
        name: getMediaViewKey
        type: NSString

    GADAdSize(.*):
        class: GADAdSize
        name: '#{g[0]}'
    kGADAdSize(.*):
        exclude: true # deprecated

    GAD(.*)ClassName:
        class: GADResponseInfo
        name: '#{g[0]}ClassName'
    GADErrorUserInfoKeyResponseInfo:
        class: GADResponseInfo
        readonly: true
        name: getErrorUserInfoKey

    GADSimulatorID:
        class: GADRequest
        name: GADSimulatorID
        type: NSString
    kGADSimulatorID:
        exclude: true
    kGAMSimulatorID:
        class: GAMRequest
        name: GAMSimulatorID
        type: NSString

    GADCustomEventParametersServer:
        class: GADMobileAds  # have no better place for it for now
        name: CustomEventParametersServer

    GoogleMobileAdsVersionString:
        marshaler: StringMarshalers.AsAsciiZMarshaler
        type: String
        class: GADMobileAds
        name: getVersion

    GADUnifiedNative.*:
        exclude: true

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    kGADMAdapterClassNamePrefix:
        exclude: true
    GADMAdapterClassNamePrefix:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
