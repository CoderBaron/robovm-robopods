package: org.robovm.pods.lottie
include: [foundation, uikit, coregraphics, coreanimation]
framework: Lottie
clang_args: ['-x', 'objective-c']
headers:
    - "#include <TargetConditionals.h>"
    - "#import <UIKit/UIKit.h>"
    - "#import <Lottie/Lottie-Swift.h>"

typedefs: {}

enums:
    CompatibleRenderingEngineOption: {}
    CompatibleBackgroundBehavior: {}
classes:
    AnimatedButton: {}

    AnimatedControl:
        methods:
            '-initWithCoder:':
                name: init
            '-beginTrackingWithTouch:withEvent:':
                name: beginTracking
            '-continueTrackingWithTouch:withEvent:':
                name: continueTracking
            '-endTrackingWithTouch:withEvent:':
                name: endTracking
            '-cancelTrackingWithEvent:':
                name: cancelTracking
    AnimatedSwitch: {}
    AnimationCompletionDelegate: {}
    AnimationContainer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    AnimationSubview:
        methods:
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
    CompatibleAnimation:
        methods:
            '-initWithName:bundle:':
                name: init
            '-initWithName:subdirectory:bundle:':
                name: init
    CompatibleAnimationKeypath:
        methods:
            '-initWithKeypath:':
                name: init
            '-initWithKeys:':
                name: init
    CompatibleAnimationView:
        methods:
            '-initWithCompatibleAnimation:':
                name: init
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
            '-initWithCompatibleAnimation:compatibleRenderingEngineOption:':
                name: init
            '-initWithUrl:':
                name: init
            '-initWithUrl:compatibleRenderingEngineOption:':
                name: init
            '-initWithData:':
                name: init
            '-initWithData:compatibleRenderingEngineOption:':
                name: init
            '-playWithCompletion:':
                name: play
            '-playFromProgress:toProgress:completion:':
                name: playFromProgress
            '-playFromFrame:toFrame:completion:':
                name: playFromFrame
            '-playFromMarker:toMarker:completion:':
                name: playFromMarker
            '-getValueFor:atFrame:':
                name: getValue
            '-addSubview:forLayerAt:':
                name: addSubview
            '-convertWithRect:toLayerAt:':
                name: convert
            '-convertWithPoint:toLayerAt:':
                name: convert
            '-setColorValue:forKeypath:':
                name: setColorValue
            '-getColorValueFor:atFrame:':
                name: getColorValue
            '-playWithMarker:completion:':
                name: play
    CompositionLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    DebugLayer:
        methods:
            '-initWithCoder:':
                name: init
    DisabledTextLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    ImageCompositionLayer: {}
    InvertedMatteLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    LottieView:
        methods:
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
    MaskContainerLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    NullCompositionLayer: {}
    PreCompositionLayer: {}
    ShapeCompositionLayer: {}
    ShapeContainerLayer:
        methods:
            '-initWithCoder:':
                name: init
            '-initWithLayer:':
                name: init
    ShapeRenderLayer: {}
    SolidCompositionLayer: {}
    TextCompositionLayer: {}
    TextLayer:
        methods:
            '-initWithCoder:':
                name: init
    BaseAnimationLayer: {}
    BaseCompositionLayer: {}
    CoreAnimationLayer: {}
    CoreTextRenderLayer: {}
    GradientRenderLayer: {}
    GroupLayer: {}
    ImageLayer: {}
    MainThreadAnimationLayer: {}
    MaskCompositionLayer: {}
    PreCompLayer: {}
    ShapeItemLayer: {}
    ShapeLayer: {}
    SolidLayer: {}
    TransformLayer: {}
    RepeaterLayer: {}
    LottieAnimationView: {}
    LottieAnimationViewBase: {}
    InfiniteOpaqueAnimationLayer: {}
    CompatibleDictionaryTextProvider:
        methods:
            '-initWithValues:':
                name: init
    LottieAnimationLayer:
        methods:
            '-initWithCoder:':
                name: init
protocols: {}


functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Function_#{g[0]}'

values:
    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Value_#{g[0]}'

constants:
    SWIFT_TYPEDEFS:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Constant__#{g[0]}'
