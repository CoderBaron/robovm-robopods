package: org.robovm.pods.lottie
include: [foundation, uikit, coregraphics, coreanimation]
framework: Lottie
clang_args: ['-x', 'objective-c']
headers:
    - Lottie.h

typedefs: {}

enums: {}

classes:
    AnimatedButton: {}

    AnimatedControl:
        methods:
            '-initWithCoder:':
                name: init
            '-beginTrackingWithTouch:withEvent:':
                name: beginTracking
            '-continueTrackingWithTouch:withEvent:':
                name: continueTracking
            '-endTrackingWithTouch:withEvent:':
                name: endTracking
            '-cancelTrackingWithEvent:':
                name: cancelTracking
    AnimatedSwitch: {}
    AnimationCompletionDelegate: {}
    AnimationContainer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    AnimationSubview:
        methods:
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
    AnimationView: {}
    CompatibleAnimation:
        methods:
            '-initWithName:bundle:':
                name: init
    CompatibleAnimationKeypath:
        methods:
            '-initWithKeypath:':
                name: init
            '-initWithKeys:':
                name: init
    CompatibleAnimationView:
        methods:
            '-initWithCompatibleAnimation:':
                name: init
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
            '-playWithCompletion:':
                name: play
            '-playFromProgress:toProgress:completion:':
                name: playFromProgress
            '-playFromFrame:toFrame:completion:':
                name: playFromFrame
            '-playFromMarker:toMarker:completion:':
                name: playFromMarker
            '-getValueFor:atFrame:':
                name: getValue
            '-addSubview:forLayerAt:':
                name: addSubview
            '-convertWithRect:toLayerAt:':
                name: convert
            '-convertWithPoint:toLayerAt:':
                name: convert
    CompositionLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    DebugLayer:
        methods:
            '-initWithCoder:':
                name: init
    DisabledTextLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    ImageCompositionLayer: {}
    InvertedMatteLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    LottieView:
        methods:
            '-initWithFrame:':
                name: init
            '-initWithCoder:':
                name: init
    MaskContainerLayer:
        methods:
            '-initWithLayer:':
                name: init
            '-initWithCoder:':
                name: init
    NullCompositionLayer: {}
    PreCompositionLayer: {}
    ShapeCompositionLayer: {}
    ShapeContainerLayer:
        methods:
            '-initWithCoder:':
                name: init
            '-initWithLayer:':
                name: init
    ShapeRenderLayer: {}
    SolidCompositionLayer: {}
    TextCompositionLayer: {}

protocols: {}


functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Function_#{g[0]}'

values:
    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Value_#{g[0]}'

constants:
    SWIFT_TYPEDEFS:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Constant__#{g[0]}'
