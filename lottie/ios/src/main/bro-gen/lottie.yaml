package: org.robovm.pods.lottie
include: [foundation, uikit, coregraphics, coreanimation]
framework: Lottie
clang_args: ['-x', 'objective-c']
headers:
    - Lottie.h

private_typedefs:
    LOTLayerGroup: ObjCObject
    LOTAssetGroup: ObjCObject

typedefs: {}

enums: {}

classes:
    LOTAnimatedControl:
        methods:
            '-setLayerName:forState:':
                name: setLayerName
    LOTAnimatedSwitch:
        methods:
            '-setOn:animated:':
                name: setOn
            '-setProgressRangeForOnState:toProgress:':
                name: setProgressRangeForOnState
            '-setProgressRangeForOffState:toProgress:':
                name: setProgressRangeForOffState
            '+switchNamed:inBundle:':
                name: create
                constructor: true
    LOTAnimationCache:
        methods:
            '-addAnimation:forKey:':
                name: addAnimation
    LOTAnimationTransitionController:
        methods:
            '-initWithAnimationNamed:fromLayerNamed:toLayerNamed:applyAnimationTransform:':
                name: init
            '-initWithAnimationNamed:fromLayerNamed:toLayerNamed:applyAnimationTransform:inBundle:':
                name: init
    LOTAnimationView:
        methods:
            '-initWithModel:inBundle:':
                name: init
            '-playToProgress:withCompletion:':
                name: playToProgress
            '-playFromProgress:toProgress:withCompletion:':
                name: playFromProgress
            '-playToFrame:withCompletion:':
                name: playToFrame
            '-playFromFrame:toFrame:withCompletion:':
                name: playFromFrame
            '-setValueDelegate:forKeypath:':
                name: setValueDelegate
            '-convertPoint:toKeypathLayer:':
                name: convertPointToKeypathLayer
            '-convertRect:toKeypathLayer:':
                name: convertRectToKeypathLayer
            '-convertPoint:fromKeypathLayer:':
                name: convertPointFromKeypathLayer
            '-convertRect:fromKeypathLayer:':
                name: convertRectFromKeypathLayer
            '-addSubview:toKeypathLayer:':
                name: addSubview
            '-maskSubview:toKeypathLayer:':
                name: maskSubview
            '-setValue:forKeypath:atFrame:':
                name: setValue
            '-addSubview:toLayerNamed:applyTransform:':
                name: addSubview
            '-convertRect:toLayerNamed:':
                name: convertRectToLayer
            '+animationNamed:':
                name: create
                constructor: true
            '+animationNamed:inBundle:':
                name: create
                constructor: true
            '+animationFromJSON:inBundle:':
                name: create
                constructor: true
    LOTCacheProvider: {}
    LOTColorBlockCallback: {}
    LOTColorValueCallback: {}
    LOTComposition:
        methods:
            '-initWithJSON:withAssetBundle:':
                name: init
            '+animationNamed:inBundle:':
                name: create
                constructor: true
            '+animationFromJSON:inBundle:':
                name: create
    LOTFloatInterpolatorCallback:
        methods:
            '+withFromFloat:toFloat:':
                name: create
                constructor: true
    LOTKeypath: {}
    LOTNumberBlockCallback: {}
    LOTNumberValueCallback: {}
    LOTPathBlockCallback: {}
    LOTPathValueCallback: {}
    LOTPointBlockCallback: {}
    LOTPointInterpolatorCallback:
        methods:
            '+withFromPoint:toPoint:':
                name: create
                constructor: true
    LOTPointValueCallback: {}
    LOTSizeBlockCallback: {}
    LOTSizeInterpolatorCallback:
        methods:
            '+withFromSize:toSize:':
                name: create
                constructor: true
    LOTSizeValueCallback: {}

protocols:
    LOTColorValueDelegate:
        methods:
            '-colorForFrame:startKeyframe:endKeyframe:interpolatedProgress:startColor:endColor:currentColor:':
                name: getColor
    LOTImageCache:
        methods:
            '-setImage:forKey:':
                name: setImage
    LOTNumberValueDelegate:
        methods:
            '-floatValueForFrame:startKeyframe:endKeyframe:interpolatedProgress:startValue:endValue:currentValue:':
                name: getFloatValue
    LOTPathValueDelegate:
        methods:
            '-pathForFrame:startKeyframe:endKeyframe:interpolatedProgress:':
                name: getPath
    LOTPointValueDelegate:
        methods:
            '-pointForFrame:startKeyframe:endKeyframe:interpolatedProgress:startPoint:endPoint:currentPoint:':
                name: getPoint
    LOTSizeValueDelegate:
        methods:
            '-sizeForFrame:startKeyframe:endKeyframe:interpolatedProgress:startSize:endSize:currentSize:':
                name: getSize
    LOTValueDelegate: {}


functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Function_#{g[0]}'

values:
    LottieVersionNumber:
        exclude: true
    LottieVersionString:
        exclude: true

    kLOTKeypathEnd:
        class: LOTKeypath
        name: getKeypathEnd

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Value_#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMeLottie
        name: 'Constant__#{g[0]}'
