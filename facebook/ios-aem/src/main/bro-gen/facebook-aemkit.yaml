package: org.robovm.pods.facebook.aem
framework: FBAEMKit
include: [foundation]
clang_args: ['-x', 'objective-c']
headers: 
    - FBAEMKit-Swift.h

enums:
    FBAEMAdvertiserRuleOperator:
        exclude: true #INTERNAL - DO NOT USE

typed_enums:

categories:

classes:
    FBAEMReporter:
        methods:
            '+configureWithNetworker:appID:reporter:':
                exclude: true #INTERNAL - DO NOT USE
            '+configureWithNetworker:appID:reporter:analyticsAppID:':
                exclude: true #INTERNAL - DO NOT USE
            '+recordAndUpdateEvent:currency:value:parameters:':
                name: recordAndUpdateEvent
    FBAEMAdvertiserRuleFactory:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMAdvertiserSingleEntryRule:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMInvocation:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMNetworker:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMRequestBody:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMRule:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMUtility:
        methods:
            '-getInSegmentValue:matchingRule:':
                exclude: true # uses INTERNAL APIs
            '-getMatchedInvocation:businessID:':
                exclude: true # uses INTERNAL APIs
            '-getBusinessIDsInOrder:':
                exclude: true # uses INTERNAL APIs
    FBAEMAdvertiserMultiEntryRule:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMConfiguration:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMEvent:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMSettings:
        exclude: true #INTERNAL - DO NOT USE
protocols:
    FBAEMNetworking:
        methods:
            '-startGraphRequestWithGraphPath:parameters:tokenString:HTTPMethod:completion:':
                name: startGraphRequest
    FBSKAdNetworkReporting: {}
    FBAEMAdvertiserRuleMatching:
        exclude: true #INTERNAL - DO NOT USE
    FBAEMAdvertiserRuleProviding:
        exclude: true #INTERNAL - DO NOT USE
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

    NSStringFromFBSDKAppGroupPrivacy:
        class: FBSDKAppGroupPrivacy
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString
    NSStringFromFBSDKLikeObjectType:
        class: FBSDKLikeObjectType
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString
    NSStringFromFBSDKShareDialogMode:
        class: FBSDKShareDialogMode
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString

values:
    FBSDKShareErrorDomain:
        class: FBSDKShareError
        name: getClassDomain

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    FBAEMKit_VERSION_STRING:
        exclude: true
    FBSDK_DEFAULT_GRAPH_API_VERSION:
        exclude: true
    SWIFT_.*:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
