package: org.robovm.pods.facebook.aem
framework: FBAEMKit
include: [foundation]
clang_args: ['-x', 'objective-c']
headers: 
    - FBAEMKit.h
    - FBAEMKit-Swift.h

enums:
    FBAEMAdvertiserRuleOperator: {}

typed_enums:

categories:

classes:
    FBAEMReporter:
        methods:
            '+configureWithNetworker:appID:':
                name: configure
            '+configureWithNetworker:appID:reporter:':
                name: configure
            '+configureWithNetworker:appID:reporter:analyticsAppID:':
                name: configure
            '+recordAndUpdateEvent:currency:value:parameters:':
                name: recordAndUpdateEvent
    FBAEMAdvertiserRuleFactory: {}
    FBAEMAdvertiserSingleEntryRule:
        methods:
            '-initWithOperator:paramKey:linguisticCondition:numericalCondition:arrayCondition:':
                name: init
            '-copyWithZone:':
                exclude: true
    FBAEMInvocation:
        methods:
            '-attributeEvent:currency:value:parameters:configs:shouldUpdateCache:':
                name: attributeEvent
            '-updateConversionValueWithConfigs:event:shouldBoostPriority:':
                name: updateConversionValue
            '-isOptimizedEvent:configs:':
                name: isOptimizedEvent
            '-isOutOfWindowWithConfigs:':
                name: isOutOfWindow
            '-initWithAppLinkData:':
                name: init
            '+invocationWithAppLinkData:':
                exclude: true
            '-attributeEvent:currency:value:parameters:configurations:shouldUpdateCache:':
                name: attributeEvent
            '-updateConversionValueWithConfigurations:event:shouldBoostPriority:':
                name: updateConversionValue
            '-isOptimizedEvent:configurations:':
                name: isOptimizedEvent
            '-isOutOfWindowWithConfigurations:':
                name: isOutOfWindow
            '-getHMACWithDelay:':
                name: getHMAC
    FBAEMNetworker: {}
    FBAEMRequestBody:
        methods:
            '-appendWithKey:formValue:':
                name: append
    FBAEMRule:
        methods:
            '-initWithJSON:':
                name: init
            '-isMatchedWithRecordedEvents:recordedValues:':
                name: isMatched
            '-copyWithZone:':
                exclude: true
    FBAEMUtility:
        methods:
            '-getInSegmentValue:matchingRule:':
                name: getInSegmentValue
    FBAEMAdvertiserMultiEntryRule:
        methods:
            '-initWithOperator:rules:':
                name: init
            '-copyWithZone:':
                exclude: true
    FBAEMConfiguration:
        methods:
            '-initWithJSON:':
                name: init
            '-isSameValidFrom:businessID:':
                name: isSame
            '-copyWithZone:':
                exclude: true
            '+configureWithRuleProvider:':
                name: configureWithRuleProvider$
    FBAEMEvent:
        methods:
            '-initWithJSON:':
                name: init
            '-copyWithZone:':
                exclude: true
    FBAEMSettings: {}
protocols:
    FBAEMNetworking:
        methods:
            '-startGraphRequestWithGraphPath:parameters:tokenString:HTTPMethod:completion:':
                name: startGraphRequest
    FBSKAdNetworkReporting: {}
    FBAEMAdvertiserRuleMatching: {}
    FBAEMAdvertiserRuleProviding:
        methods:
            '-createRuleWithJson:':
                name: createRule
            '-createRuleWithDict:':
                name: createRule
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

    NSStringFromFBSDKAppGroupPrivacy:
        class: FBSDKAppGroupPrivacy
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString
    NSStringFromFBSDKLikeObjectType:
        class: FBSDKLikeObjectType
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString
    NSStringFromFBSDKShareDialogMode:
        class: FBSDKShareDialogMode
        static: true
        visibility: protected
        return_marshaler: NSString.AsStringMarshaler
        name: toString

values:
    FBSDKShareErrorDomain:
        class: FBSDKShareError
        name: getClassDomain

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    FBAEMKit_VERSION_STRING:
        exclude: true
    FBSDK_DEFAULT_GRAPH_API_VERSION:
        exclude: true
    SWIFT_.*:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
