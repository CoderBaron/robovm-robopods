package: org.robovm.pods.facebook.login
framework: FBSDKLoginKit
include:
    - foundation
    - dispatch
    - coregraphics
    - uikit
    - coreanimation
    - ../../../../ios-core/src/main/bro-gen/facebook-core.yaml
    - ../../../../ios-core-basics/src/main/bro-gen/facebook-core-basics.yaml
clang_args: ['-x', 'objective-c', '-fobjc-arc', '-Ffacebook/ios-aem/src/main/bro-gen/']
headers:
    - FBSDKLoginKit.h
    - FBSDKLoginKit-Swift.h

enums:
    FBSDKLoginError: {nserror: true}
    FBSDKDeviceLoginError: {merge_with: FBSDKLoginError}
    FBSDKDefaultAudience: {}
    FBSDKLoginBehavior: {}
    FBSDKTooltipViewArrowDirection: {}
    FBSDKTooltipColorStyle: {}
    FBSDKLoginButtonTooltipBehavior: {}
    FBSDKLoginTracking: {}
    FBSDKLoginManagerState: {}
typed_enums:
    FBSDKLoginAuthType:
        enum: FBSDKLoginAuthType
        type: NSString
        prefix: FBSDKLoginAuthType
private_typedefs:
    FBSDKPermission: NSObject
classes:
    FBSDKDeviceLoginCodeInfo:
        methods:
            '-initWithIdentifier:loginCode:verificationURL:expirationDate:pollingInterval:':
                name: init
    FBSDKDeviceLoginManager:
        methods:
            '-initWithPermissions:enableSmartLogin:':
                name: init
            '-netService:didNotPublish:':
                name: didNotPublish
                parameters:
                    1:
                        type: NSNetServiceErrorUserInfo
    FBSDKDeviceLoginManagerResult:
        methods:
            '-initWithToken:isCancelled:':
                exclude: true #INTERNAL - DO NOT USE
    FBSDKLoginButton:
        methods:
            '-initWithFrame:':
                name: init
    FBSDKLoginManager:
        methods:
            '-logInWithURL:handler:':
                name: logIn
            '-reauthorizeDataAccess:handler:':
                name: reauthorizeDataAccess
            '-initWithDefaultAudience:':
                name: init
            '-logInFromViewController:configuration:completion:':
                name: logIn
            '-logInWithPermissions:fromViewController:handler:':
                name: logIn
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
            '-canOpenURL:forApplication:sourceApplication:annotation:':
                name: canOpenURL
    FBSDKLoginManagerLoginResult:
        methods:
            '-initWithToken:isCancelled:grantedPermissions:declinedPermissions:':
                name: init
            '-initWithToken:authenticationToken:isCancelled:grantedPermissions:declinedPermissions:':
                name: init
            '-addLoggingExtra:forKey:':
                name: addLogging
    FBSDKLoginTooltipView: {}
    FBSDKTooltipView:
        methods:
            '-initWithTagline:message:colorStyle:':
                name: init
            '-presentInView:withArrowPosition:direction:':
                name: presentInView
    FBSDKReferralCode:
        methods:
            '+initWithString:':
                name: initWithString$
    FBSDKReferralManager:
        methods:
            '-initWithViewController:':
                name: initWithViewController$
            '-startReferralWithCompletionHandler:':
                name: startReferralWithCompletionHandler$
    FBSDKReferralManagerResult:
        methods:
            '-initWithReferralCodes:isCancelled:':
                #trim_after_first_colon: true
                name: initWithReferralCodes$isCancelled$
    FBSDKLoginConfiguration:
        methods:
            '-initWithPermissions:tracking:nonce:':
                name: init
            '-initWithPermissions:tracking:':
                name: init
            '-initWithTracking:':
                name: init
            '-initWithPermissions:tracking:nonce:messengerPageId:':
                name: init
            '-initWithPermissions:tracking:nonce:messengerPageId:authType:':
                name: init
            '-initWithPermissions:tracking:messengerPageId:':
                static_constructor_name: createUsingMessengerPageId
                name: initUsingMessengerPageId
            '-initWithPermissions:tracking:messengerPageId:authType:':
                name: init
            '-initWithPermissions:tracking:nonce:messengerPageId:authType:codeVerifier:':
                name: init
    FBSDKCodeVerifier:
        methods:
            '-initWithString:':
                name: init
    FBSDKLoginUtility: {}
    FBSDKPermission:
        methods:
            '-initWithString:':
                name: init
    FBSDKAuthenticationTokenFactory:
        methods:
            '-createTokenFromTokenString:nonce:graphDomain:completion:':
                name: createToken
    FBSDKAuthenticationTokenHeader: {}
    FBSDKDevicePoller:
        methods:
            '-scheduleBlock:interval:':
                name: schedule
            '-scheduleWithInterval:block:':
                name: schedule
    FBSDKDeviceRequestsHelper:
        methods:
            '+startAdvertisementServiceWithLoginCode:delegate:':
                name: startAdvertisementService
            '+isDelegate:forAdvertisementService:':
                name: isDelegate
    FBSDKLoginCompleterFactory:
        methods:
            '-createLoginCompleterWithUrlParameters:appID:':
                name: createLoginCompleter
    FBSDKLoginCompletionParameters: {}
    FBSDKLoginManagerLogger:
        methods:
            '-initWithParameters:tracking:':
                name: init
            '-initWithLoggingToken:tracking:':
                name: init
            '-endLoginWithResult:error:':
                name: endLogin
            '-willAttemptAppSwitchingBehaviorWithUrlScheme:':
                name: willAttemptAppSwitchingBehavior
            '+clientStateForAuthMethod:andExistingState:logger:':
                name: getClientState
    FBSDKLoginRecoveryAttempter:
        methods:
            '-attemptRecoveryFromError:completionHandler:':
                name: attemptRecovery
    FBSDKProfileFactory:
        methods:
            '-createProfileWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:imageURL:email:friendIDs:birthday:ageRange:hometown:location:gender:isLimited:':
                name: createProfile
    _LoginURLCompleter:
        methods:
            '-completeLoginWithNonce:codeVerifier:handler:':
                name: completeLogin
protocols:
    FBSDKDeviceLoginManagerDelegate:
        methods:
            '-deviceLoginManager:startedWithCodeInfo:':
                name: started
            '-deviceLoginManager:completedWithResult:error:':
                name: completed
    FBSDKLoginButtonDelegate:
        methods:
            '-loginButton:didCompleteWithResult:error:':
                name: didComplete
            '-loginButtonDidLogOut:':
                name: didLogOut
            '-loginButtonWillLogin:':
                name: willLogin
    FBSDKLoginTooltipViewDelegate:
        methods:
            '-loginTooltipView:shouldAppear:':
                name: shouldAppear
            '-loginTooltipViewWillAppear:':
                name: willAppear
            '-loginTooltipViewWillNotAppear:':
                name: willNotAppear
    FBSDKLoginProviding:
        methods:
            '-logInFromViewController:configuration:completion:':
                name: logIn
            '-logInWithPermissions:fromViewController:handler:':
                name: logIn
    _FBSDKLoginEventLogging:
        methods:
            '-logInternalEvent:parameters:isImplicitlyLogged:':
                name: logInternalEvent
    _FBSDKServerConfigurationProviding:
        methods:
            '-loadServerConfigurationWithCompletionBlock:':
                name: loadServerConfiguration
    _FBSDKUserInterfaceElementProviding: {}
    _FBSDKUserInterfaceStringProviding: {}
    FBSDKAuthenticationTokenCreating:
        methods:
            '-createTokenFromTokenString:nonce:graphDomain:completion:':
                name: createToken
    FBSDKDevicePolling:
        methods:
            '-scheduleBlock:interval:':
                name: schedule
    FBSDKLoginCompleterFactory:
        name: FBSDKLoginCompleterFactoryProtocol
        methods:
            '-createLoginCompleterWithURLParameters:appID:authenticationTokenCreator:graphRequestFactory:internalUtility:':
                name: createLoginCompleter
    FBSDKLoginCompleting:
        methods:
            '-completeLoginWithHandler:':
                name: completeLogin
            '-completeLoginWithHandler:nonce:codeVerifier:':
                name: completeLogin
            '-completeLoginWithNonce:codeVerifier:handler:':
                name: completeLogin
    FBSDKProfileCreating:
        methods:
            '-createProfileWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:imageURL:email:friendIDs:birthday:ageRange:hometown:location:gender:isLimited:':
                name: createProfile
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:

    FBSDKLoginErrorDomain:
        class: FBSDKLoginError
        name: getClassDomain

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    SWIFT_.*:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
