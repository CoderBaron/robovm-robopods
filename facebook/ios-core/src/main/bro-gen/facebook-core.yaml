package: org.robovm.pods.facebook.core
framework: FBSDKCoreKit
include: [foundation, dispatch, coregraphics, uikit, webkit, coreanimation]
clang_args: ['-x', 'objective-c', '-fobjc-arc']
headers: 
    - FBSDKCoreKit.h
    - FBSDKCoreKit-Swift.h

private_typedefs:
    OS_dispatch_source: DispatchSource
    'FBSDKUserIdentifier *': String
    # these are only forward declared
    FBSDKServerConfigurationProviding : NSObject
    'id<FBSDKInternalURLOpener>' : NSObject
    'id<FBSDKWebViewProviding>': NSObject

enums:
    FBSDKAppEventsFlushBehavior: {}
    FBSDKProductAvailability: {}
    FBSDKProductCondition: {}
    FBSDKCoreError: {nserror: true, prefix: FBSDKError}
    FBSDKGraphRequestError: {}
    FBSDKGraphRequestFlags: {prefix: FBSDKGraphRequestFlag}
    FBSDKAppLinkNavigationType: {}
    FBSDKBridgeAPIProtocolType: {}
    FBSDKProfilePictureMode: {}
    FBSDKAdvertisingTrackingStatus: {prefix: FBSDKAdvertisingTracking}
    FBSDKFeature: {}
typed_enums:
    FBSDKAppEventName:
        class: FBSDKAppEventName
        type: NSString
        prefix: FBSDKAppEventName
    FBSDKAppEventParameterName:
        class: FBSDKAppEventParameterName # could be a dict but it would require to configure method for each key
        type: NSString
        prefix: FBSDKAppEventParameterName
    FBSDKAppEventParameterProduct:
        class: FBSDKAppEventParameterProduct  # as logProductItem uses it as NSDictionary<NSString, id>
        type: NSString
        prefix: FBSDKAppEventParameterProduct
    FBSDKAppEventParameterValue:
        class: FBSDKAppEventParameterValue  # as used only as value to dict, not need to overcomplicate
        type: NSString
        prefix: FBSDKAppEventParameterValue
    FBSDKAppEventUserDataType:
        class: FBSDKAppEventUserDataType
        type: NSString
        prefix: FBSDKApp
    FBSDKLoggingBehavior:
        enum: FBSDKLoggingBehavior
        type: NSString
        prefix: FBSDKLoggingBehavior
    FBSDKHTTPMethod:
        enum: FBSDKHTTPMethod
        type: NSString
        prefix: FBSDKHTTPMethod
    FBSDKURLScheme:
        class: FBSDKURLScheme
        type: String
        prefix: FBSDKURLScheme

classes:
    FBSDKAccessToken:
        methods:
            '-initWithTokenString:permissions:declinedPermissions:expiredPermissions:appID:userID:expirationDate:refreshDate:dataAccessExpirationDate:':
                name: init
            '-initWithTokenString:permissions:declinedPermissions:expiredPermissions:appID:userID:expirationDate:refreshDate:dataAccessExpirationDate:graphDomain:':
                name: init
            '+refreshCurrentAccessToken:':
                exclude: true # deprecated
            '+refreshCurrentAccessTokenWithCompletion:':
                name: refreshCurrentAccessToken
    FBSDKAppEvents:
        properties:
            '+flushBehavior':
                exclude: true
            '+loggingOverrideAppID':
                exclude: true
            '+userID':
                exclude: true
            '+anonymousID':
                exclude: true
        methods:
            '+flush':
                exclude: true # is deprecated and will be removed in the next major release
            '+sendEventBindingsToUnity':
                exclude: true # is deprecated and will be removed in the next major release
            '+setIsUnityInit:':
                exclude: true # is deprecated and will be removed in the next major release
            '+augmentHybridWKWebView:':
                exclude: true # is deprecated and will be removed in the next major release
            '+setPushNotificationsDeviceTokenString:':
                exclude: true # is deprecated and will be removed in the next major release
            '+setPushNotificationsDeviceToken:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logPushNotificationOpen:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logEvent:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logEvent:valueToSum:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logEvent:parameters:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logEvent:valueToSum:parameters:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logEvent:valueToSum:parameters:accessToken:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logPurchase:currency:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logPurchase:currency:parameters:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logPurchase:currency:parameters:accessToken:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logPushNotificationOpen:action:':
                exclude: true # is deprecated and will be removed in the next major release
            '+logProductItem:availability:condition:description:imageLink:link:title:priceAmount:currency:gtin:mpn:brand:parameters:':
                exclude: true # is deprecated and will be removed in the next major release
            '+requestForCustomAudienceThirdPartyIDWithAccessToken:':
                exclude: true # is deprecated and will be removed in the next major release
            '+setUserEmail:firstName:lastName:phone:dateOfBirth:gender:city:state:zip:country:':
                exclude: true # deprecated and conflicts with instance method
            '+setUserData:forType:':
                exclude: true # deprecated and conflicts with instance method
            '+getUserData':
                exclude: true # deprecated and conflicts with instance method
            '+clearUserData':
                exclude: true # deprecated and conflicts with instance method
            '+clearUserDataForType:':
                exclude: true # deprecated and conflicts with instance method
            '+logInternalEvent:parameters:isImplicitlyLogged:':
                name: logInternalEvent
            '+logInternalEvent:parameters:isImplicitlyLogged:accessToken:':
                name: logInternalEvent
            '+activateApp':
                exclude: true # deprecated and conflicts with instance method
            '-setUserEmail:firstName:lastName:phone:dateOfBirth:gender:city:state:zip:country:':
                name: setUserData
            '-setUserData:forType:':
                name: setUserData
            '-logEvent:valueToSum:':
                name: logEvent
            '-logEvent:parameters:':
                name: logEvent
            '-logEvent:valueToSum:parameters:':
                name: logEvent
            '-logEvent:valueToSum:parameters:accessToken:':
                name: logEvent
            '-logPurchase:currency:':
                name: logPurchase
            '-logPurchase:currency:parameters:':
                name: logPurchase
            '-logPurchase:currency:parameters:accessToken:':
                name: logPurchase
            '-logPushNotificationOpen:action:':
                name: logPushNotificationOpen
            '-logProductItem:availability:condition:description:imageLink:link:title:priceAmount:currency:gtin:mpn:brand:parameters:':
                name: logProductItem
            '-requestForCustomAudienceThirdPartyIDWithAccessToken:':
                name: requestForCustomAudienceThirdPartyID
            '-logInternalEvent:parameters:isImplicitlyLogged:':
                name: logInternalEvent
            '-logInternalEvent:parameters:isImplicitlyLogged:accessToken:':
                name: logInternalEvent
    FBSDKAppLink:
        methods:
            '+appLinkWithSourceURL:targets:webURL:':
                name: create
                constructor: true
    FBSDKAppLinkNavigation:
        methods:
            '+navigationWithAppLink:extras:appLinkData:':
                name: create
                constructor: true
            '+navigationWithAppLink:extras:appLinkData:settings:':
                name: create
                constructor: true
            '+callbackAppLinkDataForAppWithName:url:':
                name: getCallbackAppLinkData
            '+resolveAppLink:handler:':
                name: resolveAppLink
            '+resolveAppLink:resolver:handler:':
                name: resolveAppLink
            '+navigateToAppLink:error:':
                name: navigateToAppLink
                throws: NSErrorException
            '+navigateToURL:handler:':
                name: navigateToURL
            '+navigateToURL:resolver:handler:':
                name: navigateToURL
    FBSDKAppLinkResolver:
        methods:
            '-appLinksFromURLs:handler:':
                name: appLinksFromURLs
    FBSDKAppLinkResolverRequestBuilder: {}
    FBSDKAppLinkTarget:
        methods:
            '+appLinkTargetWithURL:appStoreId:appName:':
                name: create
                constructor: true
    FBSDKAppLinkUtility: {}
    FBSDKApplicationDelegate:
        methods:
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
            '-application:openURL:options:':
                name: openURL
            '-application:didFinishLaunchingWithOptions:':
                name: didFinishLaunching
            '-application:continueUserActivity:':
                name: continueUserActivity
    FBSDKAuthenticationToken:
        methods:
            '-initWithTokenString:nonce:graphDomain:':
                name: init
    FBSDKAuthenticationTokenClaims:
        methods:
            '+claimsFromEncodedString:nonce:':
                constructor: true
                name: create
    FBSDKBridgeAPI:
        methods:
            '-initWithProcessInfo:':
                name: init
            '-openBridgeAPIRequest:useSafariViewController:fromViewController:completionBlock:':
                name: openBridgeAPIRequest
            '-openURLWithSafariViewController:sender:fromViewController:handler:':
                name: openURL
            '-openURL:sender:handler:':
                name: openURL
            '-initWithProcessInfo:logger:urlOpener:bridgeAPIResponseFactory:frameworkLoader:appURLSchemeProvider:':
                name: init
    FBSDKBridgeAPIRequest:
        methods:
            '+bridgeAPIRequestWithProtocolType:scheme:methodName:methodVersion:parameters:userInfo:':
                name: create
                constructor: true
            '+bridgeAPIRequestWithProtocolType:scheme:methodName:parameters:userInfo:':
                constructor: true
                name: create
    FBSDKBridgeAPIResponse:
        methods:
            '+bridgeAPIResponseWithRequest:error:':
                name: create
                constructor: true
            '+bridgeAPIResponseWithRequest:responseURL:sourceApplication:error:':
                name: create
                constructor: true
            '+bridgeAPIResponseCancelledWithRequest:':
                name: create
                constructor: true
    FBSDKButton:
        methods:
            '-configureWithIcon:title:backgroundColor:highlightedColor:':
                name: configure
            '-configureWithIcon:title:backgroundColor:highlightedColor:selectedTitle:selectedIcon:selectedColor:selectedHighlightedColor:':
                name: configure
            '-sizeThatFits:title:':
                name: getSizeThatFits
            '-textSizeForText:font:constrainedSize:lineBreakMode:':
                name: getTextSizeForText
            '-logTapEventWithEventName:parameters:':
                name: logTapEvent
    FBSDKGraphErrorRecoveryProcessor:
        methods:
            '+new':
                exclude: true
            '-processError:request:delegate:':
                name: processError
            '-initWithAccessTokenString:':
                name: init
    FBSDKGraphRequest:
        methods:
            '-initWithGraphPath:':
                name: init
            '-initWithGraphPath:HTTPMethod:':
                name: init
            '-initWithGraphPath:parameters:':
                name: init
            '-initWithGraphPath:parameters:HTTPMethod:':
                name: init
            '-initWithGraphPath:parameters:tokenString:version:HTTPMethod:':
                name: init
            '-initWithGraphPath:parameters:flags:':
                name: init
            '-startWithCompletionHandler:':
                exclude: true # as deprecated
            '-startWithCompletion:':
                name: start
            '-initWithGraphPath:parameters:tokenString:HTTPMethod:flags:':
                name: init
            '+configureWithSettings:currentAccessTokenStringProvider:graphRequestConnectionFactory:':
                name: configure
    FBSDKGraphRequestConnection:
        methods:
            '-addRequest:completionHandler:':
                exclude: true # deprecated, conflicts
            '-addRequest:batchEntryName:completionHandler:':
                exclude: true # deprecated, conflicts
            '-addRequest:batchParameters:completionHandler:':
                exclude: true # deprecated, conflicts
            '-addRequest:completion:':
                name: addRequest
            '-addRequest:name:completion:':
                name: addRequest
            '-addRequest:parameters:completion:':
                name: addRequest
    FBSDKGraphRequestDataAttachment:
        methods:
            '-initWithData:filename:contentType:':
                name: init
    FBSDKImpressionTrackingButton: {}
    FBSDKLocation: {}
    FBSDKMeasurementEvent: {}
    FBSDKProfile:
        methods:
            '-initWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:':
                name: init
            '-imageURLForPictureMode:size:':
                name: getImageURL
            '+loadCurrentProfileWithCompletion:':
                name: loadCurrentProfile
            '-initWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:imageURL:email:friendIDs:birthday:ageRange:hometown:location:gender:isLimited:':
                name: init
            '-initWithUserID:firstName:middleName:lastName:name:linkURL:refreshDate:imageURL:email:friendIDs:birthday:ageRange:hometown:location:gender:':
                name: init
    FBSDKProfilePictureView:
        methods:
            '-initWithFrame:profile:':
                name: init
            '-initWithProfile:':
                name: init
    FBSDKSettings:
        properties:
            '+graphAPIVersion':
                name: fbSdkGetGraphAPIVersion
            '+sdkVersion':
                exclude: true # as deprecated
            '+defaultGraphAPIVersion':
                exclude: true # as deprecated
            '+JPEGCompressionQuality':
                exclude: true # as deprecated
            '+autoLogAppEventsEnabled':
                exclude: true # as deprecated
            '+codelessDebugLogEnabled':
                exclude: true # as deprecated
            '+advertiserIDCollectionEnabled':
                exclude: true # as deprecated
            '+SKAdNetworkReportEnabled':
                exclude: true # as deprecated
            '+limitEventAndDataUsage':
                exclude: true # as deprecated
            '+shouldUseCachedValuesForExpensiveMetadata':
                exclude: true # as deprecated
            '+graphErrorRecoveryEnabled':
                exclude: true # as deprecated
            '+appID':
                exclude: true # as deprecated
            '+appURLSchemeSuffix':
                exclude: true # as deprecated
            '+clientToken':
                exclude: true # as deprecated
            '+displayName':
                exclude: true # as deprecated
            '+facebookDomainPart':
                exclude: true # as deprecated
            '+loggingBehaviors':
                exclude: true # as deprecated
            'skAdNetworkReportEnabled':
                name: SKAdNetworkReportEnabled  # to match getter declared in protocol
        methods:
            '-setDataProcessingOptions:country:state:':
                name: setDataProcessingOptions
            '+setDataProcessingOptions:country:state:':
                exclude: true # as deprecated
            '+setDataProcessingOptions:':
                exclude: true # as deprecated
            '+isAdvertiserTrackingEnabled':
                exclude: true # as deprecated
            '+setAdvertiserTrackingEnabled:':
                exclude: true # as deprecated
            '+enableLoggingBehavior:':
                exclude: true # as deprecated
            '+disableLoggingBehavior:':
                exclude: true # as deprecated
    FBSDKURL:
        methods:
            '+URLWithURL:':
                name: create
                constructor: true
            '+URLWithInboundURL:sourceApplication:':
                name: create
                constructor: true
    FBSDKUserAgeRange: {}
    FBSDKUtility:
        methods:
            '+dictionaryWithQueryString:':
                name: getDictionary
            '+queryStringWithDictionary:error:':
                name: queryString
                throws: NSErrorException
            '+startGCDTimerWithInterval:block:':
                name: startGCDTimer
            '+unversionedFacebookURLWithHostPrefix:path:queryParameters:error:':
                name: getUnversionedFacebookURL
    FBSDKWebDialog:
        methods:
            '+dialogWithName:delegate:':
                name: create
                constructor: true
            '+showWithName:parameters:delegate:':
                name: show
            '+createAndShow:parameters:frame:delegate:windowFinder:':
                name: createAndShow
            '+createAndShowWithName:parameters:frame:delegate:windowFinder:':
                name: createAndShow
    FBSDKWebViewAppLinkResolver: {}
    FBSDKSettingsLogging: {}
    FBSDKLogger:
        methods:
            '+singleShotLogEntry:logEntry:':
                name: singleShotLogEntry
            '+new':
                exclude: true
    FBSDKError:
        methods:
            '+errorWithCode:message:':
                name: create
            '+errorWithDomain:code:message:':
                name: create
            '+errorWithCode:message:underlyingError:':
                name: create
            '+errorWithDomain:code:message:underlyingError:':
                name: create
            '+errorWithDomain:code:userInfo:message:underlyingError:':
                name: create
            '+invalidArgumentErrorWithName:value:message:':
                name: createInvalidArgumentError
            '+invalidArgumentErrorWithDomain:name:value:message:':
                name: createInvalidArgumentError
            '+invalidArgumentErrorWithDomain:name:value:message:underlyingError:':
                name: createInvalidArgumentError
            '+requiredArgumentErrorWithDomain:name:message:':
                name: createInvalidArgumentError
            '+unknownErrorWithMessage:':
                name: createUnknownError
    FBSDKGraphRequestConnectionFactory: {}
    FBSDKGraphRequestFactory: {}
    FBSDKIcon:
        methods:
            '-pathWithSize:':
                name: getPath
    FBSDKInternalUtility:
        methods:
            '-object:isEqualToObject:':
                name: compareUrls
            '-extractPermissionsFromResponse:grantedPermissions:declinedPermissions:expiredPermissions:':
                name: extractPermissions
    FBSDKShareDialogConfiguration: {}
    FBSDKWebDialogView:
        methods:
            '+configureWithWebViewProvider:urlOpener:':
                name: configure
    FBSDKDynamicFrameworkLoaderProxy: {}
    FBSDKKeychainStore:
        methods:
            '-initWithService:accessGroup:':
                name: init
            '-setData:forKey:accessibility:':
                name: setData
    FBSDKKeychainStoreFactory: {}
    FBSDKLoginTooltip:
        methods:
            '-initWithText:enabled:':
                name: init
    FBSDKTransformer:
        methods:
            '-CATransform3DMakeScale:sy:sz:':
                name: makeScale
            '-CATransform3DMakeTranslation:ty:tz:':
                name: makeTranslation
            '-CATransform3DConcat:b:':
                name: concat
    FBSDKServerConfigurationProvider:
        methods:
            '-loadServerConfigurationWithCompletionBlock:':
                name: loadServerConfiguration
    FBSDKImpressionLoggingButton: {}
    FBSDKErrorFactory: {}
    FBSDKNetworkErrorChecker: {}
    FBSDKAppEventsCAPIManager:
        methods:
            '-configureWithFactory:settings:':
                name: configure
    FBSDKTransformerGraphRequestFactory:
        methods:
            '-configureWithDatasetID:url:accessKey:':
                name: configure
            '-callCapiGatewayAPIWith:':
                name: callCapiGatewayAPI
protocols:
    FBSDKAppLinkResolving:
        methods:
            '-appLinkFromURL:handler:':
                name: getAppLink
    FBSDKApplicationObserving:
        methods:
            '-application:didFinishLaunchingWithOptions:':
                name: didFinishLaunching
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
    FBSDKBridgeAPIProtocol:
        methods:
            '-requestURLWithActionID:scheme:methodName:methodVersion:parameters:error:':
                name: requestURL
            '-responseParametersForActionID:queryParameters:cancelled:error:':
                name: responseParameters
            '-requestURLWithActionID:scheme:methodName:parameters:error:':
                name: requestURL
    FBSDKButtonImpressionTracking: { }
    FBSDKCopying: { }
    FBSDKErrorRecoveryAttempting:
        methods:
            '-attemptRecoveryFromError:optionIndex:completionHandler:':
                name: attemptRecovery
            '-attemptRecoveryFromError:completionHandler:':
                name: attemptRecovery
    FBSDKGraphErrorRecoveryProcessorDelegate:
        methods:
            '-processorDidAttemptRecovery:didRecover:error:':
                name: didRecover
            '-processorWillProcessError:error:':
                name: willProcessError
    FBSDKGraphRequest:
        skip_adapter: true
        name:
            FBSDKGraphRequestProtocol
        methods:
            '-startWithCompletion:':
                name: start
    FBSDKGraphRequestConnecting:
        methods:
            '-addRequest:completion:':
                name: addRequest
    FBSDKGraphRequestConnectionDelegate:
        methods:
            '-requestConnection:didFailWithError:':
                name: didFail
            '-requestConnection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:':
                name: didSendBodyData
    FBSDKMutableCopying:
        skip_adapter: true
    FBSDKTokenCaching: { }
    FBSDKURLOpening:
        methods:
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
            '-canOpenURL:forApplication:sourceApplication:annotation:':
                name: canOpenURL
    FBSDKWebDialogDelegate:
        methods:
            '-webDialog:didCompleteWithResults:':
                name: didComplete
            '-webDialog:didFailWithError:':
                name: didFail
    FBSDKAccessTokenProviding: { skip_adapter: true}
    FBSDKAccessTokenSetting: { skip_adapter: true}
    FBSDKFeatureChecking:
        methods:
            '-checkFeature:completionBlock:':
                name: checkFeature
    FBSDKSettings:
        name: FBSDKSettingsProtocol
        properties:
            '+loggingBehaviors':
                exclude: true # as deprecated
        methods:
            '-setDataProcessingOptions:country:state:':
                name: setDataProcessingOptions
    FBSDKSettingsLogging: {}
    FBSDKAppURLSchemeProviding: { skip_adapter: true}
    FBSDKBridgeAPIResponseCreating: { skip_adapter: true}
    FBSDKDynamicFrameworkResolving: { skip_adapter: true}
    FBSDKOperatingSystemVersionComparing: { skip_adapter: true}
    FBSDKURLOpener:
        skip_adapter: true
        methods:
            '-openURL:sender:handler:':
                name: openURL
            '-openURLWithSafariViewController:sender:fromViewController:handler:':
                name: openURL

    FBSDKAppAvailabilityChecker: {}
    FBSDKBridgeAPIRequestOpening:
        methods:
            '-openBridgeAPIRequest:useSafariViewController:fromViewController:completionBlock:':
                name: openBridgeAPIRequest
            '-openURLWithSafariViewController:sender:fromViewController:handler:':
                name: openURL
            '-openURL:sender:handler:':
                name: openURL
    FBSDKInternalUtility:
        name: FBSDKInternalUtilityProtocol
        methods:
            '-URLWithScheme:host:path:queryParameters:error:':
                name: constructURL
            '-appURLWithHost:path:queryParameters:error:':
                name: appURL
            '-facebookURLWithHostPrefix:path:queryParameters:error:':
                name: facebookURL
            '-extendDictionaryWithDataProcessingOptions:':
                name: extendDictionary
            '-extractPermissionsFromResponse:grantedPermissions:declinedPermissions:expiredPermissions:':
                name: extractPermissions
    FBSDKWebDialogViewDelegate:
        methods:
            '-webDialogView:didCompleteWithResults:':
                name: didComplete
            '-webDialogView:didFailWithError:':
                name: didFail
    FBSDKWindowFinding: {}
    FBSDKAuthenticationTokenProviding: {} # FIXME: contains static properties in interface that is not completely supported
    FBSDKAuthenticationTokenSetting: {}
    FBSDKBridgeAPIRequest:
        name:
            FBSDKBridgeAPIRequestProtocol
    FBSDKBridgeAPIRequestCreating:
        methods:
            '-bridgeAPIRequestWithProtocolType:scheme:methodName:methodVersion:parameters:userInfo:':
                name: bridgeAPIRequest
            '-bridgeAPIRequestWithProtocolType:scheme:methodName:parameters:userInfo:':
                name: bridgeAPIRequest
    FBSDKGraphRequestConnectionFactory:
        name: FBSDKGraphRequestConnectionFactoryProtocol
    FBSDKGraphRequestFactory:
        name:
            FBSDKGraphRequestFactoryProtocol
        methods:
            '-createGraphRequestWithGraphPath:parameters:tokenString:HTTPMethod:flags:':
                name: createGraphRequest
            '-createGraphRequestWithGraphPath:parameters:':
                name: createGraphRequest
            '-createGraphRequestWithGraphPath:':
                name: createGraphRequest
            '-createGraphRequestWithGraphPath:parameters:HTTPMethod:':
                name: createGraphRequest
            '-createGraphRequestWithGraphPath:parameters:tokenString:version:HTTPMethod:':
                name: createGraphRequest
            '-createGraphRequestWithGraphPath:parameters:flags:':
                name: createGraphRequest
    FBSDKKeychainStore:
        name: FBSDKKeychainStoreProtocol
        methods:
            '-setString:forKey:accessibility:':
                name: setString
            '-setDictionary:forKey:accessibility:':
                name: setDictionary
    FBSDKKeychainStoreProviding:
        methods:
            '-createKeychainStoreWithService:accessGroup:':
                name: createKeychainStore
    FBSDKLogging:
        methods:
            '-initWithLoggingBehavior:':
                name: init
            '+singleShotLogEntry:logEntry:':
                name: singleShotLogEntry
    FBSDKProfileProviding: {}
    FBSDKTokenStringProviding:
        properties:
            '+tokenString':
                name: providedTokenString #@warning UNSAFE - DO NOT USE
    FBSDKURLHosting:
        methods:
            '-appURLWithHost:path:queryParameters:error:':
                name: appURL
            '-facebookURLWithHostPrefix:path:queryParameters:error:':
                name: facebookURL
    FBSDKAppLinkTarget:
        name: FBSDKAppLinkTargetProtocol
        methods:
            '+appLinkTargetWithURL:appStoreId:appName:':
                name: create
    FBSDKButtonImpressionLogging: {}
    __FBSDKLoggerCreating:
        exclude: true
    FBSDKErrorCreating:
        methods:
            '-errorWithCode:userInfo:message:underlyingError:':
                name: error
            '-errorWithDomain:code:userInfo:message:underlyingError:':
                name: error
            '-invalidArgumentErrorWithName:value:message:underlyingError:':
                name: invalidArgumentError
            '-invalidArgumentErrorWithDomain:name:value:message:underlyingError:':
                name: invalidArgumentError
            '-requiredArgumentErrorWithName:message:underlyingError:':
                name: requiredArgumentError
            '-requiredArgumentErrorWithDomain:name:message:underlyingError:':
                name: requiredArgumentError
            '-unknownErrorWithMessage:userInfo:':
                name: unknownError
    FBSDKNetworkErrorChecking: {}
    _FBSDKWindowFinding: {}
    FBSDKCAPIReporter:
        methods:
            '-configureWithFactory:settings:':
                name: configure
functions:
    fb_randomString:
        exclude: true
    fbsdkdfl_(.*):
        exclude: true

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    FBSDKErrorDomain:
        class: FBSDKCoreError
        name: getClassDomain
    FBSDKGraphRequestErrorKey:
        enum: FBSDKCoreErrorKeys
        name: GraphRequestError
        type: NSString
        extends: NSErrorUserInfoKey
    FBSDKError(.*)Key:
        enum: FBSDKCoreErrorKeys
        name: '#{g[0]}'
        type: NSString
        extends: NSErrorUserInfoKey
    FBSDKGraphRequest(.*)Key:
        enum: FBSDKCoreErrorKeys
        name: '#{g[0]}'
        type: NSString
        extends: NSErrorUserInfoKey
    FBSDKNonJSONResponseProperty:
        class: FBSDKGraphRequest
        name: nonJSONResponsePropertyKey
        type: NSString
    FBSDKAccessToken(.*)Notification:
        class: FBSDKAccessToken
        static_class: Notifications
        name: '#{g[0]}'
        type: NSString
    FBSDKAccessToken(.*)Key:
        class: FBSDKAccessToken
        static_class: Keys
        name: 'Token#{g[0]}'
        type: NSString
    FBSDKAppEvents(.*)Notification:
        class: FBSDKAppEvents
        static_class: Notifications
        name: '#{g[0]}'
        type: NSString
    FBSDKAppEventsOverrideAppIDBundleKey:
        class: FBSDKAppEvents
        name: getOverrideAppIDBundleKey
        type: NSString
    FBSDKBridgeAPI(.*)Key:
        class: FBSDKBridgeAPI
        static_class: Keys
        name: 'Event#{g[0]}'
        type: NSString
    FBSDKMeasurementEventNotification:
        class: FBSDKMeasurementEvent
        name: 'eventNotificationName'
        type: NSString
    FBSDKProfileDidChangeNotification:
        class: FBSDKProfile
        name: 'didChangeNotification'
        type: NSString
    FBSDKProfileChange(.*)Key:
        class: FBSDKProfile
        static_class: Keys
        name: 'Change#{g[0]}'
        type: NSString
    FBSDKAppLinkVersion:
        class: FBSDKAppLink
        name: getVersion
    FBSDKDialogConfigurationName(.*):
        class: FBSDKShareDialogConfiguration
        static_class: DialogNames
        name: '#{g[0]}'
    FBSDKAppEventParameter(.*):
        class: FBSDKAppEvents
        static_class: Parameters
        name: '#{g[0]}'
    FBSDKCATransform3DIdentity:
        class: FBSDKTransformer
        name: identity
    FBSDK_CANOPENURL_(.*):
        class: FBSDKInternalUtility
        name: 'canOpen#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    FBSDK_VERSION_STRING:
        class: FBSDKCore
        name: Version
    FBSDK_TARGET_PLATFORM_VERSION:
        class: FBSDKCore
        name: PlatformVersion
    FBSDK_DEFAULT_GRAPH_API_VERSION:
        class: FBSDKCore
        name: DefaultGraphApiVersion
    SWIFT_.*:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
