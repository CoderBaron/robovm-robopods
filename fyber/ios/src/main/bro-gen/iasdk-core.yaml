package: org.robovm.pods.fyber.core
framework: IASDKCore
include: [foundation, uikit, corelocation, coreanimation, dispatch, coregraphics]
clang_args: ['-x', 'objective-c']
headers: 
    - IASDKCore.h

private_typedefs:
    'IAVASTModel *': NSObject

enums:
    IALogLevel: {}
    IAUserGenderType: {}
    IAGDPRConsentType: {}
    IASDKCoreInitErrorType: {}
    IAVideoLayoutControlType: {}
    IAVideoClickActionType: {}
    IAVideoType: {}
    FMPLogLevel: {}
    IALGPDConsentType: {}
    DTXLogLevel: {}
    IACoppaAppliesType: {}

typed_enums:

classes:
    IAAdModel: {}
    IAAdRequest: {}
    IAAdSpot:
        methods:
            '-fetchAdWithCompletion:':
                name: fetchAd
            '-loadAdWithMarkup:withCompletion:':
                name: loadAd
    IAAdView: {}
    IABaseView: {}
    IAContentController: {}
    IADebugger: {}
    IAFullscreenUnitController:
        methods:
            '-showAdAnimated:completion:':
                name: showAd
    IAImpressionData: {}
    IALogger: {}
    IAMRAIDAdView: {}
    IAMediation: {}
    IAMediationAdMob: {}
    IAMediationDFP: {}
    IAMediationFyber: {}
    IAMediationIronSource: {}
    IAMediationMax: {}
    IAMediationMopub: {}
    IARequest: {}
    IASDKCore:
        methods:
            '-initWithAppID:':
                name: init
            '-initWithAppID:completionBlock:completionQueue:':
                name: init
    IAUnitController: {}
    IAUserData: {}
    IAViewUnitController: {}
    FMPBiddingManager: {}
    IAMRAIDContentController: {}
    IAMRAIDContentModel: {}
    IAMediationAdmost: {}
    IASDKMRAID: {}
    IASDKVideo: {}
    IAVideoContentController: {}
    IAVideoContentModel: {}
    IAVideoLayout:
        methods:
            '-setTopLeftControlType:topRightControlType:bottomLeftControlType:bottomRightControlType:':
                name: setTopLeftControlType
    IAVideoView: {}
    FMPLogger: {}
    DTXLogger: {}
protocols:
    IAAdRequestBuilder: {}
    IAAdSpotBuilder: {}
    IADebuggerBuilder: {}
    IAFullscreenUnitControllerBuilder: {}
    IAGlobalAdDelegate:
        methods:
            '-adDidShowWithImpressionData:withAdRequest:':
                name: adDidShow
    IAInterfaceAdDescription: {}
    IAInterfaceAllocBlocker: {}
    IAInterfaceBuilder: {}
    IAInterfaceContentModel: {}
    IAInterfaceSingleton: {}
    IAInterfaceUnitController: {}
    IAUnitControllerBuilderProtocol: {}
    IAUnitDelegate: {}
    IAUserDataBuilder: {}
    IAViewUnitControllerBuilder: {}
    IAMRAIDContentControllerBuilder: {}
    IAMRAIDContentDelegate:
        methods:
            'IAVideoCompleted:':
                name: videoCompleted
            '-IAMRAIDContentController:MRAIDAdWillResizeToFrame:':
                name: adWillResize
            '-IAMRAIDContentController:MRAIDAdDidResizeToFrame:':
                name: adDidResize
            '-IAMRAIDContentController:MRAIDAdWillExpandToFrame:':
                name: adWillExpand
            '-IAMRAIDContentController:MRAIDAdDidExpandToFrame:':
                name: adDidExpand
            '-IAMRAIDContentController:videoInterruptedWithError:':
                name: videoInterrupted
    IAMRAIDContentModelBuilder: {}
    IAMediationInterface: {}
    IAVideoContentControllerBuilder: {}
    IAVideoContentDelegate:
        methods:
            '-IAVideoCompleted:':
                name: videoCompleted
            '-IAVideoContentController:videoInterruptedWithError:':
                name: videoInterrupted
            '-IAVideoContentController:videoDurationUpdated:':
                name: videoDurationUpdated
            '-IAVideoContentController:videoProgressUpdatedWithCurrentTime:totalTime:':
                name: videoProgressUpdated
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    IASDKCoreVersion(.*):
        exclude: true

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    kIADefault(.*):
        static_class: Defaults
        class: IAMRAIDAdView
        name: '#{g[0]}'
    kIADebugger(DidChangeRequestSettingsNotification):
        class: IADebugger
        static_class: Notifications
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
