package: org.robovm.pods.onesignal
include: [foundation, usernotifications, uikit]
framework: OneSignalFramework
internal_frameworks:
    - OneSignalCore
    - OneSignalOSCore
    - OneSignalExtension
    - OneSignalLocation
    - OneSignalNotifications
    - OneSignalInAppMessages
    - OneSignalOutcomes
    - OneSignalUser
clang_args: ['-x', 'objective-c']
headers:
    - "#import <OneSignalFramework/OneSignalFramework.h>"
    - "#import <OneSignalLocation/OneSignalLocationManager.h>"
    - "#import <OneSignalInAppMessages/OneSignalInAppMessages.h>"
    - "#import <OneSignalExtension/OneSignalExtension.h>"

private_typedefs:
    OS_dispatch_source: org.robovm.apple.dispatch.DispatchSource
    OS_dispatch_queue: org.robovm.apple.dispatch.DispatchQueue
typedefs:

enums:
    OSNotificationActionType: {}
    OSNotificationDisplayType: {}
    OSNotificationPermission: {}
    ONE_S_LOG_LEVEL: {name: OSLogLevel, prefix: ONE_S_LL_}
    Session: {name: OSSession}
    OSInfluenceChannel: {}
    OSInfluenceType: {}
    PromptActionResult: { }
    AppEntryAction: { }
    FocusEventType: { }
    FocusAttributionState: { }
    HTTPMethod: { }
    ViewOrientation: { prefix: Orientation }
    OSResponseStatusType: { prefix: OSResponseStatus }
    OSUIApplicationReleaseMode: { prefix: UIApplicationRelease }
    OSInAppMessageActionUrlType: { }
classes:
    # structs
    os_last_location:
        name: OSLastLocation
    os_location_coordinate:
        name: OSLocationCoordinate

    OSNotification:
        methods:
            '+parseWithApns:':
                name: parse
    OSNotificationPayload:
        methods:
            '+parseWithApns:':
                name: parse
    OSPermissionState:
        methods:
            '-initWithPermission:':
                name: init
    OSPermissionSubscriptionState: {}
    OneSignal:
        methods:
            '+initWith.*':
                name: Init
                return_type: ObjCClass
                parameters:
                    launchOptions:
                        type: UIApplicationLaunchOptions
                    settings:
                        type: OSSettings
            '+setLogLevel:visualLevel:':
                name: setLogLevel
            '+onesignal_Log:message:':
                name: onesignalLog
            '+sendTag:value:onSuccess:onFailure:':
                name: sendTag
            '+sendTag:value:':
                name: sendTag
            '+sendTags:onSuccess:onFailure:':
                name: sendTags
            '+getTags:onFailure:':
                name: getTags
            '+deleteTag:onSuccess:onFailure:':
                name: deleteTag
            '+deleteTags:onSuccess:onFailure:':
                name: deleteTags
            '+deleteTagsWithJsonString:':
                name: deleteTags
            '+postNotification:onSuccess:onFailure:':
                name: postNotification
            '+postNotificationWithJsonString:onSuccess:onFailure:':
                name: postNotification
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:':
                name: didReceiveNotification
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:withContentHandler:':
                name: didReceiveNotification
            '+serviceExtensionTimeWillExpireRequest:withMutableNotificationContent:':
                name: serviceExtensionTimeWillExpire
            '+app_id':
                name: getAppId
            '+sdk_version_raw':
                name: getSdkVersionRaw
            '+sdk_semantic_version':
                name: getSdkSemanticVersion
            '+promptForPushNotificationsWithUserResponse:':
                name: promptForPushNotifications
            '+promptForPushNotificationsWithUserResponse:fallbackToSettings:':
                name: promptForPushNotifications
            '+sendTagsWithJsonString:':
                name: sendTags
            '+setEmail:withEmailAuthHashToken:withSuccess:withFailure:':
                trim_after_first_colon: true
            '+setEmail:withSuccess:withFailure:':
                trim_after_first_colon: true
            '+logoutEmailWithSuccess:withFailure:':
                name: logoutEmail
            '+setEmail:withEmailAuthHashToken:':
                trim_after_first_colon: true
            '+addTrigger:withValue:':
                name: addTrigger
            '+sendOutcome:onSuccess:':
                name: sendOutcome
            '+sendUniqueOutcome:onSuccess:':
                name: sendUniqueOutcome
            '+sendOutcomeWithValue:value:':
                name: sendOutcome
            '+sendOutcomeWithValue:value:onSuccess:':
                name: sendOutcome
            '+setExternalUserId:withCompletion:':
                name: setExternalUserId
            '+onesignalLog:message:':
                name: onesignalLog
            '+setExternalUserId:withSuccess:withFailure:':
                name: setExternalUserId
            '+setExternalUserId:withExternalIdAuthHashToken:withSuccess:withFailure:':
                name: setExternalUserId
            '+removeExternalUserId:withFailure:':
                name: removeExternalUserId
            '+setSMSNumber:withSMSAuthHashToken:':
                name: setSMSNumber
            '+setSMSNumber:withSMSAuthHashToken:withSuccess:withFailure:':
                name: setSMSNumber
            '+setSMSNumber:withSuccess:withFailure:':
                name: setSMSNumber
            '+logoutSMSNumberWithSuccess:withFailure:':
                name: logoutSMSNumber
            '+setLanguage:withSuccess:withFailure:':
                name: setLanguage
            '+enterLiveActivity:withToken:':
                name: enterLiveActivity
            '+enterLiveActivity:withToken:withSuccess:withFailure:':
                name: enterLiveActivity
            '+exitLiveActivity:withSuccess:withFailure:':
                name: exitLiveActivity
            '+login:withToken:':
                name: login
            '+initialize:withLaunchOptions:':
                name: initialize

    OSDevice: {}
    OSInAppMessageOutcome: {}
    OSInAppMessageTag: {}
    OSSMSSubscriptionState: { }
    OSInAppMessage: { }
    OSCachedUniqueOutcome:
        methods:
            '-initWithParamsName:uniqueId:channel:':
                name: init
            '-initWithParamsName:uniqueId:timestamp:channel:':
                name: init
    OSChannelTracker:
        methods:
            '-initWithRepository:':
                name: init
    OSIndirectInfluence:
        methods:
            '-initWithParamsInfluenceId:forChannel:timestamp:':
                name: init
    OSInfluence:
        methods:
            '-initWithBuilder:':
                name: init
    OSInfluenceBuilder: {}
    OSInfluenceDataRepository: {}
    OSOutcomeEventParams:
        methods:
            '-initWithOutcomeId:outcomeSource:weight:timestamp:':
                name: init
    OSOutcomeEventsCache: {}
    OSOutcomeEventsFactory:
        methods:
            '-initWithCache:':
                name: init
    OSOutcomeEventsRepository:
        methods:
            '-initWithCache:':
                name: init
            '-requestMeasureOutcomeEventWithAppId:deviceType:event:onSuccess:onFailure:':
                name: requestMeasureOutcomeEvent
            '-getNotCachedUniqueInfluencesForOutcome:influences:':
                name: getNotCachedUniqueInfluences
    OSOutcomeSource:
        methods:
            '-initWithDirectBody:indirectBody:':
                name: init
    OSOutcomeSourceBody:
        methods:
            '-initWithNotificationIds:inAppMessagesIds:':
                name: init
    OSPrivacyConsentController:
        methods:
            '+shouldLogMissingPrivacyConsentErrorWithMethodName:':
                name: shouldLogMissingPrivacyConsentError
    OSRequestGetIosParams:
        methods:
            '+withUserId:appId:':
                name: create
                constructor: true
    OSRequestPostNotification:
        methods:
            '+withAppId:withJson:':
                name: create
                constructor: true
    OSRequestSubmitNotificationOpened:
        methods:
            '+withUserId:appId:wasOpened:messageId:withDeviceType:':
                name: create
                constructor: true
    OSRequestTrackV1:
        methods:
            '+trackUsageData:appId:':
                name: create
                constructor: true
    OSSessionManager:
        methods:
            '-init:withTrackerFactory:':
                name: init
            '-onDirectInfluenceFromNotificationOpen:withNotificationId:':
                name: onDirectInfluenceFromNotificationOpen
    OSTrackerFactory:
        methods:
            '-initWithRepository:':
                name: init
    OneSignalClient:
        methods:
            '-executeRequest:onSuccess:onFailure:':
                name: executeRequest
            '-executeSynchronousRequest:onSuccess:onFailure:':
                name: executeSynchronousRequest
            '-executeDataRequest:onSuccess:onFailure:':
                name: executeDataRequest
            '-executeSimultaneousRequests:withSuccess:onFailure:':
                name: executeSimultaneousRequests
            '-executeSimultaneousRequests:withCompletion:':
                name: executeSimultaneousRequests
    OneSignalCoreHelper:
        exclude: true
    OneSignalLog:
        methods:
            '+onesignalLog:message:':
                name: log
    OneSignalOutcomeEventsController:
        methods:
            '-initWithSessionManager:outcomeEventsFactory:':
                name: init
            '-sendClickActionOutcomes:appId:deviceType:':
                name: sendClickActionOutcomes
            '-sendOutcomeEvent:appId:deviceType:successBlock:':
                name: sendOutcomeEvent
            '-sendUniqueOutcomeEvent:appId:deviceType:successBlock:':
                name: sendUniqueOutcomeEvent
            '-sendOutcomeEventWithValue:value:appId:deviceType:successBlock:':
                name: sendOutcomeEvent
            '-addOutcomeWithValue:value:':
                name: addOutcome
            '-sendSessionEndOutcomes:appId:pushSubscriptionId:onesignalId:influenceParams:onSuccess:onFailure:':
                name: sendSessionEndOutcomes
    OneSignalOutcomes: {}
    OneSignalRequest: {}
    OneSignalTrackFirebaseAnalytics:
        methods:
            '+init':
                name: initialize
    OneSignalUserDefaults:
        methods:
            '-getSavedBoolForKey:defaultValue:':
                name: getSavedBool
            '-saveBoolForKey:withValue:':
                name: saveBool
            '-getSavedStringForKey:defaultValue:':
                name: getSavedString
            '-saveStringForKey:withValue:':
                name: saveString
            '-getSavedIntegerForKey:defaultValue:':
                name: getSavedInteger
            '-saveIntegerForKey:withValue:':
                name: saveInteger
            '-getSavedDoubleForKey:defaultValue:':
                name: getSavedDouble
            '-saveDoubleForKey:withValue:':
                name: saveDouble
            '-getSavedSetForKey:defaultValue:':
                name: getSavedSet
            '-saveSetForKey:withValue:':
                name: saveSet
            '-getSavedDictionaryForKey:defaultValue:':
                name: getSavedDictionary
            '-saveDictionaryForKey:withValue:':
                name: saveDictionary
            '-getSavedObjectForKey:defaultValue:':
                name: getSavedObject
            '-saveObjectForKey:withValue:':
                name: saveObject
            '-getSavedCodeableDataForKey:defaultValue:':
                name: getSavedCodeableData
            '-saveCodeableDataForKey:withValue:':
                name: saveCodeableData
    OSOutcomeEvent:
        methods:
            '-initWithSession:notificationIds:name:timestamp:weight:':
                name: init
    OSRequestLiveActivityEnter:
        methods:
            '+withSubscriptionId:appId:activityId:token:':
                name: create
                constructor: true
    OSRequestLiveActivityExit:
        methods:
            '+withSubscriptionId:appId:activityId:':
                name: create
                constructor: true
    OSBoolObservable:
        methods:
            '-initWithChangeSelector:':
                name: init
    OSDeviceUtils: { }
    OSDialogInstanceManager: { }
    OSDisplayableNotification: { }
    OSFocusInfluenceParam:
        methods:
            '-initWithParamsInfluenceIds:influenceKey:directInfluence:influenceDirectKey:':
                name: init
    OSInAppMessageClickEvent: { }
    OSInAppMessageClickResult: { }
    OSInAppMessageDidDismissEvent: { }
    OSInAppMessageDidDisplayEvent: { }
    OSInAppMessageWillDismissEvent: { }
    OSInAppMessageWillDisplayEvent: { }
    OSNetworkingUtils: { }
    OSNotificationClickEvent: { }
    OSNotificationClickResult: { }
    OSNotificationWillDisplayEvent: { }
    OSNotificationsManager:
        methods:
            '+handleWillShowInForegroundForNotification:completion:':
                name: handleWillShowInForegroundForNotification
            '+handleNotificationActionWithUrl:actionID:':
                name: handleNotificationAction
            '+receiveRemoteNotification:UserInfo:completionHandler:':
                name: receiveRemoteNotification
            '+notificationReceived:wasOpened:':
                name: notificationReceived
            '+handleWillPresentNotificationInForegroundWithPayload:withCompletion:':
                name: handleWillPresentNotificationInForeground
            '+didRegisterForRemoteNotifications:deviceToken:':
                name: didRegisterForRemoteNotifications
    OSObservable:
        methods:
            '-initWithChangeSelector:':
                name: init
    OSOutcomes: { }
    OSPermissionChangedInternalObserver: { }
    OSPermissionStateInternal:
        methods:
            '-initAsTo':
                static_constructor: true
                static_constructor_name: asTo
            '-initAsFrom':
                static_constructor: true
                static_constructor_name: asFrom
    OSPushSubscriptionChangedState: { }
    OSPushSubscriptionState: { }
    OSRemoteParamController: { }
    OSStubInAppMessages: { }
    OSStubLocation: { }
    OneSignalConfigManager: { }
    OneSignalLiveActivityController: { }
    OneSignalMobileProvision: { }
    OneSignalNotificationSettings: { }
    OneSignalUserManagerImpl:
        methods:
            '-loginWithExternalId:token:':
                name: login
            '-setLocationWithLatitude:longitude:':
                name: setLocation
            '-updateSessionWithSessionCount:sessionTime:refreshDeviceMetadata:sendImmediately:onSuccess:onFailure:':
                name: updateSession
    OneSignalWrapper: { }
    SwizzlingForwarder:
        methods:
            '-initWithTarget:withYourSelector:withOriginalSelector:':
                name: init
            '-invokeWithArgs:':
                name: invoke
    OneSignalAttachmentHandler:
        methods:
            '+addAttachments:toNotificationContent:':
                name: addAttachments
            '+addActionButtons:toNotificationContent:':
                name: addActionButtons
    OneSignalExtension:
        methods:
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:':
                name: didReceiveNotificationExtensionRequest
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:withContentHandler:':
                name: didReceiveNotificationExtensionRequest
            '+serviceExtensionTimeWillExpireRequest:withMutableNotificationContent:':
                name: serviceExtensionTimeWillExpireRequest
    OneSignalExtensionBadgeHandler:
        methods:
            '+handleBadgeCountWithNotificationRequest:withNotification:withMutableNotificationContent:':
                name: handleBadgeCount
    OneSignalInAppMessages: { }
    OneSignalLocationManager:
        methods:
            '+startLocationSharedWithFlag:':
                name: startLocationShared
            '+promptLocationFallbackToSettings:completionHandler:':
                name: promptLocationFallbackToSettings
    OneSignalNotificationServiceExtensionHandler:
        methods:
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:':
                name: didReceiveNotificationExtensionRequest
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:withContentHandler:':
                name: didReceiveNotificationExtensionRequest
            '+serviceExtensionTimeWillExpireRequest:withMutableNotificationContent:':
                name: serviceExtensionTimeWillExpireRequest
    OneSignalReceiveReceiptsController:
        methods:
            '-sendReceiveReceiptWithNotificationId:':
                name: sendReceiveReceipt
            '-sendReceiveReceiptWithPlayerId:notificationId:appId:':
                name: sendReceiveReceipt
            '-sendReceiveReceiptWithPlayerId:notificationId:appId:successBlock:failureBlock:':
                name: sendReceiveReceipt
            '-sendReceiveReceiptWithPlayerId:notificationId:appId:delay:successBlock:failureBlock:':
                name: sendReceiveReceipt
protocols:
    OSNotificationDisplayTypeDelegate:
        skip_adapter: true # only one method there
        methods:
            '-willPresentInFocusNotificationWithPayload:withCompletion:':
                name: willPresentInFocusNotification
    OSJSONDecodable:
        methods:
            '+instanceWithData:':
                name: create
            '+instanceWithJson:':
                name: create
    OSJSONEncodable: { }
    SessionStatusDelegate: { }
    OSDebug: { }
    OSDialogPresenter:
        methods:
            '-presentDialogWithTitle:withMessage:withActions:cancelTitle:withActionCompletion:':
                name: presentDialog
    OSInAppMessageClickListener: { }
    OSInAppMessageLifecycleListener: { }
    OSInAppMessages:
        methods:
            '+addTrigger:withValue:':
                name: addTrigger
    OSLiveActivities:
        methods:
            '+enter:withToken:':
                name: enter
            '+enter:withToken:withSuccess:withFailure:':
                name: enter
            '+exit:withSuccess:withFailure:':
                name: exit
    OSLocation: { }
    OSNotificationClickListener: { }
    OSNotificationLifecycleListener: { }
    OSNotificationPermissionObserver: { }
    OSNotifications:
        methods:
            '+requestPermission:fallbackToSettings:':
                name: requestPermission
    OSObserver: { }
    OSPermissionStateObserver: { }
    OSPushSubscription: { }
    OSPushSubscriptionObserver:
        methods:
            '-onPushSubscriptionDidChangeWithState:':
                name: onPushSubscriptionDidChange
    OSSession:
        methods:
            '+addOutcomeWithValue:value:':
                name: addOutcome
    OSUser:
        methods:
            '-addAliasWithLabel:id:':
                name: addAlias
            '-addTagWithKey:value:':
                name: addTag
            '-onJwtExpiredWithExpiredHandler:':
                name: onJwtExpired
    OneSignalNotificationsDelegate: { }
functions:
    injectSelector:
        exclude: true
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    kOSSS?ettingsKey(.*):
        dictionary: OSSettings
        name: '#{g[0]}'
        type: NSString

    OneSignal(.*):
        class: OneSignal
        name: '#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    # internal control not required to be exposed
    XC8_AVAILABLE:
        exclude: true

    OS_API_ACCEPT_HEADER:
        exclude: true # can't be captured automatically as its being evaluated

    # TODO: Its bad idea to get everything into one file, but there is too much of constant to deal with
    (.*):
        class: OneSignalConstants
        name: '#{g[0]}'
