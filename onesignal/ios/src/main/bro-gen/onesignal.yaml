package: org.robovm.pods.onesignal
include: [foundation, usernotifications, uikit]
framework: OneSignal
internal_frameworks: [OneSignalCore, OneSignalOutcomes]
clang_args: ['-x', 'objective-c']
headers:
    - OneSignal.h

private_typedefs: {}

typedefs: {}

enums:
    OSNotificationActionType: {}
    OSNotificationDisplayType: {}
    OSNotificationPermission: {}
    ONE_S_LOG_LEVEL: {name: OSLogLevel, prefix: ONE_S_LL_}
    Session: {name: OSSession}
    OSInfluenceChannel: {}
    OSInfluenceType: {}
    PromptActionResult: { }
    AppEntryAction: { }
    FocusEventType: { }
    FocusAttributionState: { }
    HTTPMethod: { }
classes:
    OSNotification:
        methods:
            '+parseWithApns:':
                name: parse
    OSNotificationAction: {}
    OSNotificationOpenedResult: {}
    OSNotificationPayload:
        methods:
            '+parseWithApns:':
                name: parse
    OSPermissionState: {}
    OSPermissionStateChanges: {}
    OSPermissionSubscriptionState: {}
    OSSubscriptionState: {}
    OSSubscriptionStateChanges: {}
    OneSignal:
        methods:
            '+initWith.*':
                name: Init
                return_type: ObjCClass
                parameters:
                    launchOptions:
                        type: UIApplicationLaunchOptions
                    settings:
                        type: OSSettings
            '+setLogLevel:visualLevel:':
                name: setLogLevel
            '+onesignal_Log:message:':
                name: onesignalLog
            '+sendTag:value:onSuccess:onFailure:':
                name: sendTag
            '+sendTag:value:':
                name: sendTag
            '+sendTags:onSuccess:onFailure:':
                name: sendTags
            '+getTags:onFailure:':
                name: getTags
            '+deleteTag:onSuccess:onFailure:':
                name: deleteTag
            '+deleteTags:onSuccess:onFailure:':
                name: deleteTags
            '+deleteTagsWithJsonString:':
                name: deleteTags
            '+postNotification:onSuccess:onFailure:':
                name: postNotification
            '+postNotificationWithJsonString:onSuccess:onFailure:':
                name: postNotification
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:':
                name: didReceiveNotification
            '+didReceiveNotificationExtensionRequest:withMutableNotificationContent:withContentHandler:':
                name: didReceiveNotification
            '+serviceExtensionTimeWillExpireRequest:withMutableNotificationContent:':
                name: serviceExtensionTimeWillExpire
            '+app_id':
                name: getAppId
            '+sdk_version_raw':
                name: getSdkVersionRaw
            '+sdk_semantic_version':
                name: getSdkSemanticVersion
            '+promptForPushNotificationsWithUserResponse:':
                name: promptForPushNotifications
            '+promptForPushNotificationsWithUserResponse:fallbackToSettings:':
                name: promptForPushNotifications
            '+sendTagsWithJsonString:':
                name: sendTags
            '+setEmail:withEmailAuthHashToken:withSuccess:withFailure:':
                trim_after_first_colon: true
            '+setEmail:withSuccess:withFailure:':
                trim_after_first_colon: true
            '+logoutEmailWithSuccess:withFailure:':
                name: logoutEmail
            '+setEmail:withEmailAuthHashToken:':
                trim_after_first_colon: true
            '+addTrigger:withValue:':
                name: addTrigger
            '+sendOutcome:onSuccess:':
                name: sendOutcome
            '+sendUniqueOutcome:onSuccess:':
                name: sendUniqueOutcome
            '+sendOutcomeWithValue:value:':
                name: sendOutcome
            '+sendOutcomeWithValue:value:onSuccess:':
                name: sendOutcome
            '+setExternalUserId:withCompletion:':
                name: setExternalUserId
            '+onesignalLog:message:':
                name: onesignalLog
            '+setExternalUserId:withSuccess:withFailure:':
                name: setExternalUserId
            '+setExternalUserId:withExternalIdAuthHashToken:withSuccess:withFailure:':
                name: setExternalUserId
            '+removeExternalUserId:withFailure:':
                name: removeExternalUserId
            '+setSMSNumber:withSMSAuthHashToken:':
                name: setSMSNumber
            '+setSMSNumber:withSMSAuthHashToken:withSuccess:withFailure:':
                name: setSMSNumber
            '+setSMSNumber:withSuccess:withFailure:':
                name: setSMSNumber
            '+logoutSMSNumberWithSuccess:withFailure:':
                name: logoutSMSNumber
            '+setLanguage:withSuccess:withFailure:':
                name: setLanguage
            '+enterLiveActivity:withToken:':
                name: enterLiveActivity
            '+enterLiveActivity:withToken:withSuccess:withFailure:':
                name: enterLiveActivity
            '+exitLiveActivity:withSuccess:withFailure:':
                name: exitLiveActivity

    OSEmailSubscriptionState: {}
    OSEmailSubscriptionStateChanges: {}
    OSInAppMessageAction: {}
    OSDevice: {}
    OSInAppMessageOutcome: {}
    OSInAppMessageTag: {}
    OSDeviceState: {}
    OSSMSSubscriptionState: { }
    OSSMSSubscriptionStateChanges: { }
    OSInAppMessage: { }
    OSCachedUniqueOutcome:
        methods:
            '-initWithParamsName:uniqueId:channel:':
                name: init
            '-initWithParamsName:uniqueId:timestamp:channel:':
                name: init
    OSChannelTracker:
        methods:
            '-initWithRepository:':
                name: init
    OSIndirectInfluence:
        methods:
            '-initWithParamsInfluenceId:forChannel:timestamp:':
                name: init
    OSInfluence:
        methods:
            '-initWithBuilder:':
                name: init
    OSInfluenceBuilder: {}
    OSInfluenceDataRepository: {}
    OSOutcomeEventParams:
        methods:
            '-initWithOutcomeId:outcomeSource:weight:timestamp:':
                name: init
    OSOutcomeEventsCache: {}
    OSOutcomeEventsFactory:
        methods:
            '-initWithCache:':
                name: init
    OSOutcomeEventsRepository:
        methods:
            '-initWithCache:':
                name: init
            '-requestMeasureOutcomeEventWithAppId:deviceType:event:onSuccess:onFailure:':
                name: requestMeasureOutcomeEvent
            '-getNotCachedUniqueInfluencesForOutcome:influences:':
                name: getNotCachedUniqueInfluences
    OSOutcomeSource:
        methods:
            '-initWithDirectBody:indirectBody:':
                name: init
    OSOutcomeSourceBody:
        methods:
            '-initWithNotificationIds:inAppMessagesIds:':
                name: init
    OSPrivacyConsentController:
        methods:
            '+shouldLogMissingPrivacyConsentErrorWithMethodName:':
                name: shouldLogMissingPrivacyConsentError
    OSRequestBadgeCount:
        methods:
            '+withUserId:appId:badgeCount:emailAuthToken:externalIdAuthToken:':
                name: createWithEmailAuth
            '+withUserId:appId:badgeCount:smsAuthToken:externalIdAuthToken:':
                name: createWithSmsAuth
    OSRequestCreateDevice:
        methods:
            '+withAppId:withDeviceType:withEmail:withPlayerId:withEmailAuthHash:withExternalUserId:withExternalIdAuthToken:':
                name: createWithEmail
            '+withAppId:withDeviceType:withSMSNumber:withPlayerId:withSMSAuthHash:withExternalUserId:withExternalIdAuthToken:':
                name: createWithSMSNumber
    OSRequestGetIosParams:
        methods:
            '+withUserId:appId:':
                name: create
                constructor: true
    OSRequestGetTags:
        methods:
            '+withUserId:appId:':
                name: create
                constructor: true
    OSRequestLogoutEmail:
        methods:
            '+withAppId:emailPlayerId:devicePlayerId:emailAuthHash:':
                name: create
                constructor: true
    OSRequestLogoutSMS:
        methods:
            '+withAppId:smsPlayerId:smsAuthHash:devicePlayerId:':
                name: create
                constructor: true
    OSRequestPostNotification:
        methods:
            '+withAppId:withJson:':
                name: create
                constructor: true
    OSRequestRegisterUser:
        methods:
            '+withData:userId:':
                name: create
                constructor: true
    OSRequestSendPurchases:
        methods:
            '+withUserId:externalIdAuthToken:appId:withPurchases:':
                name: createWithExternalIdAuthToken
            '+withUserId:emailAuthToken:appId:withPurchases:':
                name: createWithEmailAuthToken
    OSRequestSendTagsToServer:
        methods:
            '+withUserId:appId:tags:networkType:withEmailAuthHashToken:withExternalIdAuthHashToken:':
                name: createWithEmailAuthHashToken
            '+withUserId:appId:tags:networkType:withSMSAuthHashToken:withExternalIdAuthHashToken:':
                name: createWithSMSAuthHashToken
    OSRequestSubmitNotificationOpened:
        methods:
            '+withUserId:appId:wasOpened:messageId:withDeviceType:':
                name: create
                constructor: true
    OSRequestSyncHashedEmail:
        methods:
            '+withUserId:appId:email:networkType:':
                name: create
                constructor: true
    OSRequestTrackV1:
        methods:
            '+trackUsageData:appId:':
                name: create
                constructor: true
    OSRequestUpdateDeviceToken:
        methods:
            '+withUserId:appId:deviceToken:notificationTypes:externalIdAuthToken:':
                name: create
                constructor: true
            '+withUserId:appId:deviceToken:withParentId:emailAuthToken:email:externalIdAuthToken:':
                name: create
                constructor: true
            '+withUserId:appId:deviceToken:smsAuthToken:externalIdAuthToken:':
                name: create
                constructor: true
    OSRequestUpdateExternalUserId:
        methods:
            '+withUserId:withUserIdHashToken:withOneSignalUserId:appId:':
                name: create
                constructor: true
            '+withUserId:withUserIdHashToken:withOneSignalUserId:withEmailHashToken:appId:':
                name: createWithEmailHashToken
            '+withUserId:withUserIdHashToken:withOneSignalUserId:withSMSHashToken:appId:':
                name: createWithSMSHashToken
    OSRequestUpdateLanguage:
        methods:
            '+withUserId:appId:language:emailAuthToken:externalIdAuthToken:':
                name: createWithEmailAuthToken
            '+withUserId:appId:language:smsAuthToken:externalIdAuthToken:':
                name: createWithSMSAuthToken
    OSRequestUpdateNotificationTypes:
        methods:
            '+withUserId:appId:notificationTypes:':
                name: create
                constructor: true
    OSSessionManager:
        methods:
            '-init:withTrackerFactory:':
                name: init
            '-onDirectInfluenceFromNotificationOpen:withNotificationId:':
                name: onDirectInfluenceFromNotificationOpen
    OSTrackerFactory:
        methods:
            '-initWithRepository:':
                name: init
    OneSignalClient:
        methods:
            '-executeRequest:onSuccess:onFailure:':
                name: executeRequest
            '-executeSynchronousRequest:onSuccess:onFailure:':
                name: executeSynchronousRequest
            '-executeDataRequest:onSuccess:onFailure:':
                name: executeDataRequest
            '-executeSimultaneousRequests:withSuccess:onFailure:':
                name: executeSimultaneousRequests
            '-executeSimultaneousRequests:withCompletion:':
                name: executeSimultaneousRequests
    OneSignalCore: {}
    OneSignalCoreHelper:
        exclude: true
    OneSignalLog:
        methods:
            '+onesignalLog:message:':
                name: log
    OneSignalOutcomeEventsController:
        methods:
            '-initWithSessionManager:outcomeEventsFactory:':
                name: init
            '-sendClickActionOutcomes:appId:deviceType:':
                name: sendClickActionOutcomes
            '-sendOutcomeEvent:appId:deviceType:successBlock:':
                name: sendOutcomeEvent
            '-sendUniqueOutcomeEvent:appId:deviceType:successBlock:':
                name: sendUniqueOutcomeEvent
            '-sendOutcomeEventWithValue:value:appId:deviceType:successBlock:':
                name: sendOutcomeEvent
    OneSignalOutcomes: {}
    OneSignalRequest: {}
    OneSignalTrackFirebaseAnalytics:
        methods:
            '+init':
                name: initialize
    OneSignalUserDefaults:
        methods:
            '-getSavedBoolForKey:defaultValue:':
                name: getSavedBool
            '-saveBoolForKey:withValue:':
                name: saveBool
            '-getSavedStringForKey:defaultValue:':
                name: getSavedString
            '-saveStringForKey:withValue:':
                name: saveString
            '-getSavedIntegerForKey:defaultValue:':
                name: getSavedInteger
            '-saveIntegerForKey:withValue:':
                name: saveInteger
            '-getSavedDoubleForKey:defaultValue:':
                name: getSavedDouble
            '-saveDoubleForKey:withValue:':
                name: saveDouble
            '-getSavedSetForKey:defaultValue:':
                name: getSavedSet
            '-saveSetForKey:withValue:':
                name: saveSet
            '-getSavedDictionaryForKey:defaultValue:':
                name: getSavedDictionary
            '-saveDictionaryForKey:withValue:':
                name: saveDictionary
            '-getSavedObjectForKey:defaultValue:':
                name: getSavedObject
            '-saveObjectForKey:withValue:':
                name: saveObject
            '-getSavedCodeableDataForKey:defaultValue:':
                name: getSavedCodeableData
            '-saveCodeableDataForKey:withValue:':
                name: saveCodeableData
    OSOutcomeEvent:
        methods:
            '-initWithSession:notificationIds:name:timestamp:weight:':
                name: init
    OSRequestLiveActivityEnter:
        methods:
            '+withUserId:appId:activityId:token:':
                name: create
                constructor: true
    OSRequestLiveActivityExit:
        methods:
            '+withUserId:appId:activityId:':
                name: create
                constructor: true
protocols:
    OSPermissionObserver: {}
    OSSubscriptionObserver: {}
    OSEmailSubscriptionObserver: {}
    OSNotificationDisplayTypeDelegate:
        skip_adapter: true # only one method there
        methods:
            '-willPresentInFocusNotificationWithPayload:withCompletion:':
                name: willPresentInFocusNotification
    OSInAppMessageDelegate: {}
    OSSMSSubscriptionObserver: {}
    OSInAppMessageLifecycleHandler: {}
    OSJSONDecodable:
        methods:
            '+instanceWithData:':
                name: create
            '+instanceWithJson:':
                name: create
    OSJSONEncodable: { }
    SessionStatusDelegate: { }
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    kOSSS?ettingsKey(.*):
        dictionary: OSSettings
        name: '#{g[0]}'
        type: NSString

    ONESIGNAL_VERSION:
        class: OneSignal
        name: getVersion

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    # internal control not required to be exposed
    XC8_AVAILABLE:
        exclude: true

    OS_API_ACCEPT_HEADER:
        exclude: true # can't be captured automatically as its being evaluated

    # TODO: Its bad idea to get everything into one file, but there is too much of constant to deal with
    (.*):
        class: OneSignalConstants
        name: '#{g[0]}'
