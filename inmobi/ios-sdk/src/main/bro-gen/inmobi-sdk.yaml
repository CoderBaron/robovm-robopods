package: org.robovm.pods.inmobi.sdk
framework: InMobiSDK
include: [foundation, uikit, corelocation, coregraphics, coreanimation]
clang_args: ['-x', 'objective-c']
headers: 
    - InMobiSDK.h
    - InMobiSDK-Swift.h

enums:
    IMSDKLogLevel: {prefix: kIMSDKLogLevel}
    IMSDKGender: {prefix: kIMSDKGender}
    IMSDKEducation: {prefix: kIMSDKEducation}
    IMSDKAgeGroup: {prefix: kIMSDKAgeGroup}
    IMStatusCode: {prefix: kIMStatusCode}
    IMInterstitialAnimationType: {prefix: kIMInterstitialAnimationType}
    IMCoreAdState: {prefix: kIMCoreAdState}
    IMAudioStatus: { }
    IMBannerAudioStatus: { }
    IMRemoteLogLevel: {}
typed_enums:

classes:
    IMAdMetaInfo: {}
    IMBanner:
        methods:
            '-initWithFrame:placementId:':
                name: init
            '-initWithFrame:placementId:delegate:':
                name: init
            '-setWatermarkWith:':
                name: setWatermarkWith
    IMBannerPreloadManager: {}
    IMInterstitial:
        methods:
            '-initWithPlacementId:':
                name: init
            '-initWithPlacementId:delegate:':
                name: init
            '-showFromViewController:withAnimation:':
                name: show
            '-showFrom:with:':
                name: show
            '-setWatermarkWith:':
                name: setWatermark
    IMInterstitialPreloadManager: {}
    IMNative:
        methods:
            '-initWithPlacementId:':
                name: init
            '-initWithPlacementId:delegate:':
                name: init
    IMRequestStatus: {skip_def_constructor: true}
    IMSdk:
        methods:
            '+initWithAccountID:andCompletionHandler:':
                name: init
            '+initWithAccountID:':
                name: init
            '+initWithAccountID:consentDictionary:andCompletionHandler:':
                name: init
            '+initWithAccountID:consentDictionary:':
                name: init
            '+setLocationWithCity:state:country:':
                name: setLocation
            '+getTokenWithExtras:andKeywords:':
                name: getToken
    IMUnifiedIdService: { }
    IMUserDataModel:
        methods:
            '-initWithPhoneNumber:emailId:extras:':
                name: init
            '-copyWithZone:':
                exclude: true
    IMUserDataTypes:
        methods:
            '-initWithMd5:sha1:sha256:':
                #trim_after_first_colon: true
                name: init
            '-copyWithZone:':
                exclude: true
    IMODTargetingService: {}
    IMAudio:
        methods:
            '-initWithFrame:placementId:':
                name: init
            '-initWithFrame:placementId:delegate:':
                name: init
    IMBannerAudioHandler:
        methods:
            '-onView:addBannerAudioDelegate:':
                name: addBannerAudioDelegate
    IMCommonConstants: { }
    IMMovableView: {}
    IMPrivacyCompliance: { }
    IMWatermark:
        methods:
            '-initWithWaterMarkImageData:':
                name: init
protocols:
    IMBannerDelegate:
        methods:
            '-banner:gotSignals:':
                name: gotSignals
            '-banner:failedToGetSignalsWithError:':
                name: failedToGetSignals
            '-banner:didReceiveWithMetaInfo:':
                name: didReceive
            '-banner:didFailToReceiveWithError:':
                name: didFailToReceive
            '-banner:didFailToLoadWithError:':
                name: didFailToLoad
            '-banner:didInteractWithParams:':
                name: didInteract
            '-banner:rewardActionCompletedWithRewards:':
                name: rewardActionCompleted
    IMInterstitialDelegate:
        methods:
            '-interstitial:didReceiveWithMetaInfo:':
                name: didReceive
            '-interstitial:didFailToReceiveWithError:':
                name: didFailToReceive
            '-interstitial:gotSignals:':
                name: gotSignals
            '-interstitial:failedToGetSignalsWithError:':
                name: failedToGetSignals
            '-interstitial:didFailToLoadWithError:':
                name: didFailToLoad
            '-interstitial:didFailToPresentWithError:':
                name: didFailToPresent
            '-interstitial:didInteractWithParams:':
                name: didInteract
            '-interstitial:rewardActionCompletedWithRewards:':
                name: rewardActionCompleted
    IMNativeDelegate:
        methods:
            '-native:didFailToLoadWithError:':
                name: didFailToLoad
            '-native:didInteractWithParams:':
                name: didInteract
            '-native:adAudioStateChanged:':
                name: adAudioStateChanged
    IMUnifiedIdDelegate:
        methods:
            '-onFetchCompleted:error:':
                name: onFetchCompleted
    IMAudioDelegate:
        methods:
            '-audioAd:didReceiveWithMetaInfo:':
                name: didReceive
            '-audioAd:didFailToLoadWithError:':
                name: didFailToLoad
            '-audioAd:didFailToShowWithError:':
                name: didFailToShow
            '-audioAd:didInteractWithParams:':
                name: didInteract
            '-audioAd:rewardActionCompletedWithRewards:':
                name: rewardActionCompleted
            '-audioAd:audioStatusChanged:':
                name: audioStatusChanged
    IMBannerAudioDelegate:
        methods:
            '-banner:audioStatusChanged:':
                name: audioStatusChanged
    IMLogging:
        methods:
            '-logWithMessage:tag:logLevel:':
                name: log
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    InMobiSDK(VersionNumber):
        class: IMConstants

    InMobiSDK(VersionString):
        marshaler: StringMarshalers.AsAsciiZMarshaler
        type: String
        class: IMConstants
        name: '#{g[0]}'

    # SDK Meta Info
    kASIMUnified(MediationNetworkName):
        type: NSString
        class: IMConstants
        static_class: MetaInfo
        name: '#{g[0]}'
    kASIMUnified(SDKName):
        type: NSString
        class: IMConstants
        static_class: MetaInfo
        name: '#{g[0]}'
    kASIMUnified(SDKVersion):
        type: NSString
        class: IMConstants
        static_class: MetaInfo
        name: '#{g[0]}'

    # Unified SDK Timeouts
    kASIMUnified(.*)_U?TimeoutDefaultVal:
        class: IMConstants
        static_class: TimeoutDefaults
        name: '#{g[0]}'

    # Unified Auction Endpoint
    kUnified(AuctionEndPointUrl):
        class: IMConstants
        name: '#{g[0]}'

    # Unified Auction Keys
    kASIMUnifiedAuction_(.*)_Key:
        class: IMConstants
        static_class: AuctionKeys
        type: NSString
        name: '#{g[0]}'


    # KeyStore Keys
    kASIMKVStore(.*):
        class: IMConstants
        static_class: KeyStoreKeys
        type: NSString
        name: '#{g[0]}'

    # Ad Markup Types
    kASIMAdMarkupType(.*):
        class: IMConstants
        static_class: AdMarkupTypes
        type: NSString
        name: '#{g[0]}'

    # Banner Refresh
    kASIMBannerRefresh(.*):
        class: IMConstants
        static_class: BannerRefresh
        name: '#{g[0]}'

    # Interstitial Base VC Close Button
    kASIMInterstitialBaseVCCloseButtonDelay:
        class: IMConstants
        name: getInterstitialBaseVCCloseButtonDelay

    # AS Tracking Events
    kAS(.*)EventType:
        class: IMConstants
        static_class: EventTypes
        type: NSString
        name: '#{g[0]}'

    # NSCoding Keys
    kASIMCoding(.*)Key:
        class: IMConstants
        static_class: NSCoddingKeys
        type: NSString
        name: '#{g[0]}'
    kASIMCoding(PreinitBannerRefresh|PrimaryFlow):
        class: IMConstants
        static_class: NSCoddingKeys
        type: NSString
        name: '#{g[0]}'

    # preinit request keys
    kAS(Application|Version|GDPRConsent|ContentType)Key:
        class: IMConstants
        static_class: PreInitKeys
        type: NSString
        name: '#{g[0]}'
    kAS(IPhoneSDK|AsPlcId|AppId):
        class: IMConstants
        static_class: PreInitKeys
        type: NSString
        name: '#{g[0]}'
    kAS(.*)MimeType:
        class: IMConstants
        static_class: MimeType
        type: NSString
        name: '#{g[0]}'

    # preinit keys
    kPlacementInfo(.*):
        class: IMConstants
        static_class: PlacementInfo
        type: NSString
        name: '#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    kIMEmptyStr:
        exclude: true
    kIMMillisInSec:
        exclude: true
    IM_GDPR_CONSENT_AVAILABLE:
        class: IMConstants
    IM_GDPR_CONSENT_IAB:
        class: IMConstants
    IM_SUBJECT_TO_GDPR:
        class: IMConstants
    IM_PARTNER_GDPR_CONSENT_AVAILABLE:
        class: IMConstants
    IM_PARTNER_GDPR_APPLIES:
        class: IMConstants
    SWIFT_(.*):
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
