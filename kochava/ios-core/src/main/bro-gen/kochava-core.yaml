package: org.robovm.pods.kochava.core
framework: KochavaCore
include: [foundation]
clang_args: ['-x', 'objective-c']
headers: 
    - KochavaCore-wrap.h

private_typedefs:

enums:

typed_enums:

classes:
    KVAAppGroups: {}
    KVAConsent:
        methods:
            '-didPromptWithDidGrantBoolNumber:':
                name: didPrompt
    KVAContext: {}
    KVACoreProduct: {}
    KVAEvent:
        methods:
            '-sendWithSenderArray:':
                name: send
            '+eventWithType:':
                constructor: true
                name: create
    KVAEventType: {}
    KVALog: {}
    KVALogLevel:
        methods:
            '+logLevel:visibleBoolWithVisibleMaximumLogLevel:':
                name: isVisibleAtMaximumLogLevel
            '-initWithNameString:levelInt:osLogType:':
                name: init
            '-kva_asForContextObjectWithContext:':
                name: kvaConvertForContext
    KVAPartner:
        methods:
            '-didPromptWithDidGrantBoolNumber:date:':
                name: didPrompt
    KVAProduct:
        methods:
            '-resetWithDeleteLocalDataBool:':
                name: reset
            '-shutdownWithDeleteLocalDataBool:':
                name: shutdown
            '+productWithAPIVersionString:buildDateString:bundleIdentifierString:bundleTypeString:compilerFlagNameStringArray:compilerFlagPredicateSubstitutionVariablesDictionary:moduleNameString:nameString:organizationNameString:reverseDomainNameString:versionString:':
                constructor: true
                name: create
            '-resetWithDeleteLocalDataBool:completionClosure:':
                name: reset
            '-shutdownWithDeleteLocalDataBool:completionClosure:':
                name: shutdown
    KVASystem:
        methods:
            '-stateActiveDidBecomeWithSourceString:':
                name: stateActiveDidBecome
            '-stateActiveWillResignWithSourceString:':
                name: stateActiveWillResign
protocols:
    KVAAsForContextObjectProtocol:
        methods:
            '-kva_asForContextObjectWithContext:':
                name: kvaConvertForContext
    KVAConfigureWithObjectProtocol:
        methods:
            '-kva_configureWith:context:':
                name: kvaConfigure
    KVAEventSender: {}
    KVAEventSenderProvider: {}
    KVAFromObjectProtocol:
        methods:
            '+kva_fromObject:':
                name: createFromObject
    KVASharedPropertyProvider: {}
    KVAStartable: {}
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Function_#{g[0]}'

values:
    KochavaCoreVersionNumber:
        readonly: true
        class: KVASystem
        name: getVersionNumber
    KochavaCoreVersionString:
        class: KVASystem
        name: getVersionString
        marshaler: StringMarshalers.AsAsciiZMarshaler
        type: String

    # Make sure we don't miss any values if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Value_#{g[0]}'

constants:
    SWIFT_TYPEDEFS:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (.*):
        class: __FixMe
        name: 'Constant__#{g[0]}'
